{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, Input, Output, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/api';\nimport { LicenseManager, TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i7 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\nimport { DomHandler } from 'primeng/dom';\nimport * as i4 from 'primeng/overlay';\nimport { OverlayModule } from 'primeng/overlay';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i6 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i5 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { UniqueComponentId, ObjectUtils } from 'primeng/utils';\n\nfunction DropdownItem_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.label || \"empty\");\n  }\n}\n\nfunction DropdownItem_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    height: a0\n  };\n};\n\nconst _c1 = function (a1, a2) {\n  return {\n    \"p-dropdown-item\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nconst _c2 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nconst _c3 = [\"container\"];\nconst _c4 = [\"filter\"];\nconst _c5 = [\"in\"];\nconst _c6 = [\"editableInput\"];\nconst _c7 = [\"items\"];\nconst _c8 = [\"scroller\"];\nconst _c9 = [\"overlay\"];\n\nfunction Dropdown_span_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.label || \"empty\");\n  }\n}\n\nfunction Dropdown_span_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c10 = function (a1) {\n  return {\n    \"p-dropdown-label p-inputtext\": true,\n    \"p-dropdown-label-empty\": a1\n  };\n};\n\nfunction Dropdown_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtemplate(1, Dropdown_span_5_ng_container_1_Template, 2, 1, \"ng-container\", 15);\n    i0.ɵɵtemplate(2, Dropdown_span_5_ng_container_2_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c10, ctx_r2.label == null || ctx_r2.label.length === 0))(\"pTooltip\", ctx_r2.tooltip)(\"tooltipPosition\", ctx_r2.tooltipPosition)(\"positionStyle\", ctx_r2.tooltipPositionStyle)(\"tooltipStyleClass\", ctx_r2.tooltipStyleClass);\n    i0.ɵɵattribute(\"id\", ctx_r2.labelId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.selectedItemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.selectedItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(11, _c2, ctx_r2.selectedOption));\n  }\n}\n\nconst _c11 = function (a1) {\n  return {\n    \"p-dropdown-label p-inputtext p-placeholder\": true,\n    \"p-dropdown-label-empty\": a1\n  };\n};\n\nfunction Dropdown_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c11, ctx_r3.placeholder == null || ctx_r3.placeholder.length === 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.placeholder || \"empty\");\n  }\n}\n\nfunction Dropdown_input_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 18, 19);\n    i0.ɵɵlistener(\"input\", function Dropdown_input_7_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onEditableInputChange($event));\n    })(\"focus\", function Dropdown_input_7_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onEditableInputFocus($event));\n    })(\"blur\", function Dropdown_input_7_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onInputBlur($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r4.disabled);\n    i0.ɵɵattribute(\"maxlength\", ctx_r4.maxlength)(\"placeholder\", ctx_r4.placeholder)(\"aria-expanded\", ctx_r4.overlayVisible);\n  }\n}\n\nfunction Dropdown_i_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 20);\n    i0.ɵɵlistener(\"click\", function Dropdown_i_8_Template_i_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.clear($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Dropdown_ng_template_13_div_2_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c12 = function (a0) {\n  return {\n    options: a0\n  };\n};\n\nfunction Dropdown_ng_template_13_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_13_div_2_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r24.filterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c12, ctx_r24.filterOptions));\n  }\n}\n\nfunction Dropdown_ng_template_13_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"input\", 31, 32);\n    i0.ɵɵlistener(\"keydown.enter\", function Dropdown_ng_template_13_div_2_ng_template_2_Template_input_keydown_enter_1_listener($event) {\n      return $event.preventDefault();\n    })(\"keydown\", function Dropdown_ng_template_13_div_2_ng_template_2_Template_input_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r30.onKeydown($event, false));\n    })(\"input\", function Dropdown_ng_template_13_div_2_ng_template_2_Template_input_input_1_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r32.onFilterInputChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"span\", 33);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r26.filterValue || \"\");\n    i0.ɵɵattribute(\"placeholder\", ctx_r26.filterPlaceholder)(\"aria-label\", ctx_r26.ariaFilterLabel)(\"aria-activedescendant\", ctx_r26.overlayVisible ? \"p-highlighted-option\" : ctx_r26.labelId);\n  }\n}\n\nfunction Dropdown_ng_template_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵlistener(\"click\", function Dropdown_ng_template_13_div_2_Template_div_click_0_listener($event) {\n      return $event.stopPropagation();\n    });\n    i0.ɵɵtemplate(1, Dropdown_ng_template_13_div_2_ng_container_1_Template, 2, 4, \"ng-container\", 28);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_13_div_2_ng_template_2_Template, 4, 4, \"ng-template\", null, 29, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r25 = i0.ɵɵreference(3);\n\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r18.filterTemplate)(\"ngIfElse\", _r25);\n  }\n}\n\nfunction Dropdown_ng_template_13_p_scroller_4_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c13 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    options: a1\n  };\n};\n\nfunction Dropdown_ng_template_13_p_scroller_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_13_p_scroller_4_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 16);\n  }\n\n  if (rf & 2) {\n    const items_r37 = ctx.$implicit;\n    const scrollerOptions_r38 = ctx.options;\n    i0.ɵɵnextContext(2);\n\n    const _r21 = i0.ɵɵreference(7);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r21)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c13, items_r37, scrollerOptions_r38));\n  }\n}\n\nfunction Dropdown_ng_template_13_p_scroller_4_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Dropdown_ng_template_13_p_scroller_4_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_13_p_scroller_4_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 16);\n  }\n\n  if (rf & 2) {\n    const scrollerOptions_r41 = ctx.options;\n    const ctx_r40 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r40.loaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c12, scrollerOptions_r41));\n  }\n}\n\nfunction Dropdown_ng_template_13_p_scroller_4_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_13_p_scroller_4_ng_container_3_ng_template_1_Template, 1, 4, \"ng-template\", 36);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction Dropdown_ng_template_13_p_scroller_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-scroller\", 34, 35);\n    i0.ɵɵlistener(\"onLazyLoad\", function Dropdown_ng_template_13_p_scroller_4_Template_p_scroller_onLazyLoad_0_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r43 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r43.onLazyLoad.emit($event));\n    });\n    i0.ɵɵtemplate(2, Dropdown_ng_template_13_p_scroller_4_ng_template_2_Template, 1, 5, \"ng-template\", 13);\n    i0.ɵɵtemplate(3, Dropdown_ng_template_13_p_scroller_4_ng_container_3_Template, 2, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(8, _c0, ctx_r19.scrollHeight));\n    i0.ɵɵproperty(\"items\", ctx_r19.optionsToDisplay)(\"itemSize\", ctx_r19.virtualScrollItemSize || ctx_r19._itemSize)(\"autoSize\", true)(\"lazy\", ctx_r19.lazy)(\"options\", ctx_r19.virtualScrollOptions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.loaderTemplate);\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c14 = function () {\n  return {};\n};\n\nfunction Dropdown_ng_template_13_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_13_ng_container_5_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r21 = i0.ɵɵreference(7);\n\n    const ctx_r20 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r21)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c13, ctx_r20.optionsToDisplay, i0.ɵɵpureFunction0(2, _c14)));\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_ng_container_2_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const optgroup_r56 = i0.ɵɵnextContext().$implicit;\n    const ctx_r57 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r57.getOptionGroupLabel(optgroup_r56) || \"empty\");\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_ng_container_2_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_ng_container_2_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c15 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    selectedOption: a1\n  };\n};\n\nfunction Dropdown_ng_template_13_ng_template_6_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 42);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_13_ng_template_6_ng_container_2_ng_template_1_span_1_Template, 2, 1, \"span\", 15);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_13_ng_template_6_ng_container_2_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, Dropdown_ng_template_13_ng_template_6_ng_container_2_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 16);\n  }\n\n  if (rf & 2) {\n    const optgroup_r56 = ctx.$implicit;\n    const scrollerOptions_r47 = i0.ɵɵnextContext(2).options;\n\n    const _r51 = i0.ɵɵreference(5);\n\n    const ctx_r55 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c0, scrollerOptions_r47.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r55.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r55.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(8, _c2, optgroup_r56));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r51)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(10, _c15, ctx_r55.getOptionGroupChildren(optgroup_r56), ctx_r55.selectedOption));\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_13_ng_template_6_ng_container_2_ng_template_1_Template, 4, 13, \"ng-template\", 41);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const items_r46 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", items_r46);\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_13_ng_template_6_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const items_r46 = i0.ɵɵnextContext().$implicit;\n\n    const _r51 = i0.ɵɵreference(5);\n\n    const ctx_r50 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r51)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c15, items_r46, ctx_r50.selectedOption));\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_ng_template_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r71 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-dropdownItem\", 43);\n    i0.ɵɵlistener(\"onClick\", function Dropdown_ng_template_13_ng_template_6_ng_template_4_ng_template_0_Template_p_dropdownItem_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r71);\n      const ctx_r70 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r70.onItemClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r68 = ctx.$implicit;\n    const selectedOption_r66 = i0.ɵɵnextContext().selectedOption;\n    const ctx_r67 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"option\", option_r68)(\"selected\", selectedOption_r66 == option_r68)(\"label\", ctx_r67.getOptionLabel(option_r68))(\"disabled\", ctx_r67.isOptionDisabled(option_r68))(\"template\", ctx_r67.itemTemplate);\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_13_ng_template_6_ng_template_4_ng_template_0_Template, 1, 5, \"ng-template\", 41);\n  }\n\n  if (rf & 2) {\n    const options_r65 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngForOf\", options_r65);\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_li_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r73 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r73.emptyFilterMessageLabel, \" \");\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_li_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 45);\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 44);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_13_ng_template_6_li_6_ng_container_1_Template, 2, 1, \"ng-container\", 28);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_13_ng_template_6_li_6_ng_container_2_Template, 2, 0, \"ng-container\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const scrollerOptions_r47 = i0.ɵɵnextContext().options;\n    const ctx_r53 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, scrollerOptions_r47.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r53.emptyFilterTemplate && !ctx_r53.emptyTemplate)(\"ngIfElse\", ctx_r53.emptyFilter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r53.emptyFilterTemplate || ctx_r53.emptyTemplate);\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_li_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r77 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r77.emptyMessageLabel, \" \");\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_li_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 46);\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 44);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_13_ng_template_6_li_7_ng_container_1_Template, 2, 1, \"ng-container\", 28);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_13_ng_template_6_li_7_ng_container_2_Template, 2, 0, \"ng-container\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const scrollerOptions_r47 = i0.ɵɵnextContext().options;\n    const ctx_r54 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, scrollerOptions_r47.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r54.emptyTemplate)(\"ngIfElse\", ctx_r54.empty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r54.emptyTemplate);\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 37, 38);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_13_ng_template_6_ng_container_2_Template, 2, 1, \"ng-container\", 15);\n    i0.ɵɵtemplate(3, Dropdown_ng_template_13_ng_template_6_ng_container_3_Template, 2, 5, \"ng-container\", 15);\n    i0.ɵɵtemplate(4, Dropdown_ng_template_13_ng_template_6_ng_template_4_Template, 1, 1, \"ng-template\", null, 39, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(6, Dropdown_ng_template_13_ng_template_6_li_6_Template, 3, 6, \"li\", 40);\n    i0.ɵɵtemplate(7, Dropdown_ng_template_13_ng_template_6_li_7_Template, 3, 6, \"li\", 40);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const scrollerOptions_r47 = ctx.options;\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(scrollerOptions_r47.contentStyle);\n    i0.ɵɵproperty(\"ngClass\", scrollerOptions_r47.contentStyleClass);\n    i0.ɵɵattribute(\"id\", ctx_r22.listId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r22.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r22.group);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r22.filterValue && ctx_r22.isEmpty());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r22.filterValue && ctx_r22.isEmpty());\n  }\n}\n\nfunction Dropdown_ng_template_13_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Dropdown_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_13_ng_container_1_Template, 1, 0, \"ng-container\", 22);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_13_div_2_Template, 4, 2, \"div\", 23);\n    i0.ɵɵelementStart(3, \"div\", 24);\n    i0.ɵɵtemplate(4, Dropdown_ng_template_13_p_scroller_4_Template, 4, 10, \"p-scroller\", 25);\n    i0.ɵɵtemplate(5, Dropdown_ng_template_13_ng_container_5_Template, 2, 6, \"ng-container\", 15);\n    i0.ɵɵtemplate(6, Dropdown_ng_template_13_ng_template_6_Template, 8, 8, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, Dropdown_ng_template_13_ng_container_8_Template, 1, 0, \"ng-container\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r7.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", \"p-dropdown-panel p-component\")(\"ngStyle\", ctx_r7.panelStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.filter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r7.virtualScroll ? \"auto\" : ctx_r7.scrollHeight || \"auto\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.virtualScroll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.virtualScroll);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.footerTemplate);\n  }\n}\n\nconst _c16 = function (a1, a2, a3, a4) {\n  return {\n    \"p-dropdown p-component\": true,\n    \"p-disabled\": a1,\n    \"p-dropdown-open\": a2,\n    \"p-focus\": a3,\n    \"p-dropdown-clearable\": a4\n  };\n};\n\nconst DROPDOWN_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Dropdown),\n  multi: true\n};\n\nclass DropdownItem {\n  constructor() {\n    this.onClick = new EventEmitter();\n  }\n\n  onOptionClick(event) {\n    this.onClick.emit({\n      originalEvent: event,\n      option: this.option\n    });\n  }\n\n}\n\nDropdownItem.ɵfac = function DropdownItem_Factory(t) {\n  return new (t || DropdownItem)();\n};\n\nDropdownItem.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropdownItem,\n  selectors: [[\"p-dropdownItem\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    option: \"option\",\n    selected: \"selected\",\n    label: \"label\",\n    disabled: \"disabled\",\n    visible: \"visible\",\n    itemSize: \"itemSize\",\n    template: \"template\"\n  },\n  outputs: {\n    onClick: \"onClick\"\n  },\n  decls: 3,\n  vars: 15,\n  consts: [[\"role\", \"option\", \"pRipple\", \"\", 3, \"ngStyle\", \"id\", \"ngClass\", \"click\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function DropdownItem_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"li\", 0);\n      i0.ɵɵlistener(\"click\", function DropdownItem_Template_li_click_0_listener($event) {\n        return ctx.onOptionClick($event);\n      });\n      i0.ɵɵtemplate(1, DropdownItem_span_1_Template, 2, 1, \"span\", 1);\n      i0.ɵɵtemplate(2, DropdownItem_ng_container_2_Template, 1, 0, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(8, _c0, ctx.itemSize + \"px\"))(\"id\", ctx.selected ? \"p-highlighted-option\" : \"\")(\"ngClass\", i0.ɵɵpureFunction2(10, _c1, ctx.selected, ctx.disabled));\n      i0.ɵɵattribute(\"aria-label\", ctx.label)(\"aria-selected\", ctx.selected);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.template);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(13, _c2, ctx.option));\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.Ripple],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownItem, [{\n    type: Component,\n    args: [{\n      selector: 'p-dropdownItem',\n      template: `\n        <li\n            (click)=\"onOptionClick($event)\"\n            role=\"option\"\n            pRipple\n            [attr.aria-label]=\"label\"\n            [attr.aria-selected]=\"selected\"\n            [ngStyle]=\"{ height: itemSize + 'px' }\"\n            [id]=\"selected ? 'p-highlighted-option' : ''\"\n            [ngClass]=\"{ 'p-dropdown-item': true, 'p-highlight': selected, 'p-disabled': disabled }\"\n        >\n            <span *ngIf=\"!template\">{{ label || 'empty' }}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: { $implicit: option }\"></ng-container>\n        </li>\n    `,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], null, {\n    option: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }]\n  });\n})();\n\nclass Dropdown {\n  constructor(el, renderer, cd, zone, filterService, config) {\n    this.el = el;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.zone = zone;\n    this.filterService = filterService;\n    this.config = config;\n    this.scrollHeight = '200px';\n    this.resetFilterOnHide = false;\n    this.dropdownIcon = 'pi pi-chevron-down';\n    this.optionGroupChildren = 'items';\n    this.autoDisplayFirst = true;\n    this.emptyFilterMessage = '';\n    this.emptyMessage = '';\n    this.lazy = false;\n    this.filterMatchMode = 'contains';\n    this.tooltip = '';\n    this.tooltipPosition = 'right';\n    this.tooltipPositionStyle = 'absolute';\n    this.autofocusFilter = true;\n    this.overlayDirection = 'end';\n    this.onChange = new EventEmitter();\n    this.onFilter = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onClick = new EventEmitter();\n    this.onShow = new EventEmitter();\n    this.onHide = new EventEmitter();\n    this.onClear = new EventEmitter();\n    this.onLazyLoad = new EventEmitter();\n\n    this.onModelChange = () => {};\n\n    this.onModelTouched = () => {};\n\n    this.id = UniqueComponentId();\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(_disabled) {\n    if (_disabled) {\n      this.focused = false;\n      if (this.overlayVisible) this.hide();\n    }\n\n    this._disabled = _disabled;\n\n    if (!this.cd.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n\n  get itemSize() {\n    return this._itemSize;\n  }\n\n  set itemSize(val) {\n    this._itemSize = val;\n    console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n  }\n\n  get autoZIndex() {\n    return this._autoZIndex;\n  }\n\n  set autoZIndex(val) {\n    this._autoZIndex = val;\n    console.warn('The autoZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n\n  get baseZIndex() {\n    return this._baseZIndex;\n  }\n\n  set baseZIndex(val) {\n    this._baseZIndex = val;\n    console.warn('The baseZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n\n  get showTransitionOptions() {\n    return this._showTransitionOptions;\n  }\n\n  set showTransitionOptions(val) {\n    this._showTransitionOptions = val;\n    console.warn('The showTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n\n  get hideTransitionOptions() {\n    return this._hideTransitionOptions;\n  }\n\n  set hideTransitionOptions(val) {\n    this._hideTransitionOptions = val;\n    console.warn('The hideTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'filter':\n          this.filterTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        case 'emptyfilter':\n          this.emptyFilterTemplate = item.template;\n          break;\n\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n\n        case 'loader':\n          this.loaderTemplate = item.template;\n          break;\n\n        default:\n          this.itemTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.optionsToDisplay = this.options;\n    this.updateSelectedOption(null);\n    this.labelId = this.id + '_label';\n    this.listId = this.id + '_list';\n\n    if (this.filterBy) {\n      this.filterOptions = {\n        filter: value => this.onFilterInputChange(value),\n        reset: () => this.resetFilter()\n      };\n    }\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(val) {\n    this._options = val;\n    this.optionsToDisplay = this._options;\n    this.updateSelectedOption(this.value);\n    this.selectedOption = this.findOption(this.value, this.optionsToDisplay);\n\n    if (!this.selectedOption && ObjectUtils.isNotEmpty(this.value) && !this.editable) {\n      this.value = null;\n      this.onModelChange(this.value);\n    }\n\n    this.optionsChanged = true;\n\n    if (this._filterValue && this._filterValue.length) {\n      this.activateFilter();\n    }\n  }\n\n  get filterValue() {\n    return this._filterValue;\n  }\n\n  set filterValue(val) {\n    this._filterValue = val;\n    this.activateFilter();\n  }\n\n  ngAfterViewInit() {\n    if (this.editable) {\n      this.updateEditableLabel();\n    }\n\n    LicenseManager.check();\n  }\n\n  get label() {\n    return this.selectedOption ? this.getOptionLabel(this.selectedOption) : null;\n  }\n\n  get emptyMessageLabel() {\n    return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n  }\n\n  get emptyFilterMessageLabel() {\n    return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n  }\n\n  get filled() {\n    if (typeof this.value === 'string') return !!this.value;\n    return this.value || this.value != null || this.value != undefined;\n  }\n\n  get isVisibleClearIcon() {\n    return this.value != null && this.value !== '' && this.showClear && !this.disabled;\n  }\n\n  updateEditableLabel() {\n    if (this.editableInputViewChild && this.editableInputViewChild.nativeElement) {\n      this.editableInputViewChild.nativeElement.value = this.selectedOption ? this.getOptionLabel(this.selectedOption) : this.value || '';\n    }\n  }\n\n  getOptionLabel(option) {\n    return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option && option.label !== undefined ? option.label : option;\n  }\n\n  getOptionValue(option) {\n    return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : !this.optionLabel && option && option.value !== undefined ? option.value : option;\n  }\n\n  isOptionDisabled(option) {\n    return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option && option.disabled !== undefined ? option.disabled : false;\n  }\n\n  getOptionGroupLabel(optionGroup) {\n    return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup && optionGroup.label !== undefined ? optionGroup.label : optionGroup;\n  }\n\n  getOptionGroupChildren(optionGroup) {\n    return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n  }\n\n  onItemClick(event) {\n    const option = event.option;\n\n    if (!this.isOptionDisabled(option)) {\n      this.selectItem(event.originalEvent, option);\n      this.accessibleViewChild.nativeElement.focus({\n        preventScroll: true\n      });\n    }\n\n    setTimeout(() => {\n      this.hide();\n    }, 1);\n  }\n\n  selectItem(event, option) {\n    if (this.selectedOption != option) {\n      this.selectedOption = option;\n      this.value = this.getOptionValue(option);\n      this.onModelChange(this.value);\n      this.updateEditableLabel();\n      this.onChange.emit({\n        originalEvent: event,\n        value: this.value\n      });\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.optionsChanged && this.overlayVisible) {\n      this.optionsChanged = false;\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          if (this.overlayViewChild) {\n            this.overlayViewChild.alignOverlay();\n          }\n        }, 1);\n      });\n    }\n\n    if (this.selectedOptionUpdated && this.itemsWrapper) {\n      let selectedItem = DomHandler.findSingle(this.overlayViewChild.el.nativeElement, 'li.p-highlight');\n\n      if (selectedItem) {\n        DomHandler.scrollInView(this.itemsWrapper, DomHandler.findSingle(this.overlayViewChild.el.nativeElement, 'li.p-highlight'));\n      }\n\n      this.selectedOptionUpdated = false;\n    }\n  }\n\n  writeValue(value) {\n    if (this.filter) {\n      this.resetFilter();\n    }\n\n    this.value = value;\n    this.updateSelectedOption(value);\n    this.updateEditableLabel();\n    this.cd.markForCheck();\n  }\n\n  resetFilter() {\n    this._filterValue = null;\n\n    if (this.filterViewChild && this.filterViewChild.nativeElement) {\n      this.filterViewChild.nativeElement.value = '';\n    }\n\n    this.optionsToDisplay = this.options;\n  }\n\n  updateSelectedOption(val) {\n    this.selectedOption = this.findOption(val, this.optionsToDisplay);\n\n    if (this.autoDisplayFirst && !this.placeholder && !this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length && !this.editable) {\n      if (this.group) {\n        this.selectedOption = this.optionsToDisplay[0].items[0];\n      } else {\n        this.selectedOption = this.optionsToDisplay[0];\n      }\n\n      this.value = this.getOptionValue(this.selectedOption);\n      this.onModelChange(this.value);\n    }\n\n    this.selectedOptionUpdated = true;\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n\n  onMouseclick(event) {\n    if (this.disabled || this.readonly || this.isInputClick(event)) {\n      return;\n    }\n\n    this.onClick.emit(event);\n    this.accessibleViewChild.nativeElement.focus({\n      preventScroll: true\n    });\n    if (this.overlayVisible) this.hide();else this.show();\n    this.cd.detectChanges();\n  }\n\n  isInputClick(event) {\n    return DomHandler.hasClass(event.target, 'p-dropdown-clear-icon') || event.target.isSameNode(this.accessibleViewChild.nativeElement) || this.editableInputViewChild && event.target.isSameNode(this.editableInputViewChild.nativeElement);\n  }\n\n  isEmpty() {\n    return !this.optionsToDisplay || this.optionsToDisplay && this.optionsToDisplay.length === 0;\n  }\n\n  onEditableInputFocus(event) {\n    this.focused = true;\n    this.hide();\n    this.onFocus.emit(event);\n  }\n\n  onEditableInputChange(event) {\n    this.value = event.target.value;\n    this.updateSelectedOption(this.value);\n    this.onModelChange(this.value);\n    this.onChange.emit({\n      originalEvent: event,\n      value: this.value\n    });\n  }\n\n  show() {\n    this.overlayVisible = true;\n    this.cd.markForCheck();\n  }\n\n  onOverlayAnimationStart(event) {\n    if (event.toState === 'visible') {\n      this.itemsWrapper = DomHandler.findSingle(this.overlayViewChild.el.nativeElement, this.virtualScroll ? '.p-scroller' : '.p-dropdown-items-wrapper');\n      this.virtualScroll && this.scroller.setContentEl(this.itemsViewChild.nativeElement);\n\n      if (this.options && this.options.length) {\n        if (this.virtualScroll) {\n          const selectedIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n\n          if (selectedIndex !== -1) {\n            this.scroller.scrollToIndex(selectedIndex);\n          }\n        } else {\n          let selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.p-dropdown-item.p-highlight');\n\n          if (selectedListItem) {\n            selectedListItem.scrollIntoView({\n              block: 'nearest',\n              inline: 'center'\n            });\n          }\n        }\n      }\n\n      if (this.filterViewChild && this.filterViewChild.nativeElement) {\n        this.preventModelTouched = true;\n\n        if (this.autofocusFilter) {\n          this.filterViewChild.nativeElement.focus();\n        }\n      }\n\n      this.onShow.emit(event);\n    }\n\n    if (event.toState === 'void') {\n      this.itemsWrapper = null;\n      this.onModelTouched();\n      this.onHide.emit(event);\n    }\n  }\n\n  hide() {\n    this.overlayVisible = false;\n\n    if (this.filter && this.resetFilterOnHide) {\n      this.resetFilter();\n    }\n\n    this.cd.markForCheck();\n  }\n\n  onInputFocus(event) {\n    this.focused = true;\n    this.onFocus.emit(event);\n  }\n\n  onInputBlur(event) {\n    this.focused = false;\n    this.onBlur.emit(event);\n\n    if (!this.preventModelTouched) {\n      this.onModelTouched();\n    }\n\n    this.preventModelTouched = false;\n  }\n\n  findPrevEnabledOption(index) {\n    let prevEnabledOption;\n\n    if (this.optionsToDisplay && this.optionsToDisplay.length) {\n      for (let i = index - 1; 0 <= i; i--) {\n        let option = this.optionsToDisplay[i];\n\n        if (this.isOptionDisabled(option)) {\n          continue;\n        } else {\n          prevEnabledOption = option;\n          break;\n        }\n      }\n\n      if (!prevEnabledOption) {\n        for (let i = this.optionsToDisplay.length - 1; i >= index; i--) {\n          let option = this.optionsToDisplay[i];\n\n          if (this.isOptionDisabled(option)) {\n            continue;\n          } else {\n            prevEnabledOption = option;\n            break;\n          }\n        }\n      }\n    }\n\n    return prevEnabledOption;\n  }\n\n  findNextEnabledOption(index) {\n    let nextEnabledOption;\n\n    if (this.optionsToDisplay && this.optionsToDisplay.length) {\n      for (let i = index + 1; i < this.optionsToDisplay.length; i++) {\n        let option = this.optionsToDisplay[i];\n\n        if (this.isOptionDisabled(option)) {\n          continue;\n        } else {\n          nextEnabledOption = option;\n          break;\n        }\n      }\n\n      if (!nextEnabledOption) {\n        for (let i = 0; i < index; i++) {\n          let option = this.optionsToDisplay[i];\n\n          if (this.isOptionDisabled(option)) {\n            continue;\n          } else {\n            nextEnabledOption = option;\n            break;\n          }\n        }\n      }\n    }\n\n    return nextEnabledOption;\n  }\n\n  onKeydown(event, search) {\n    if (this.readonly || !this.optionsToDisplay || this.optionsToDisplay.length === null) {\n      return;\n    }\n\n    switch (event.which) {\n      //down\n      case 40:\n        if (!this.overlayVisible && event.altKey) {\n          this.show();\n        } else {\n          if (this.group) {\n            let selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n\n            if (selectedItemIndex !== -1) {\n              let nextItemIndex = selectedItemIndex.itemIndex + 1;\n\n              if (nextItemIndex < this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex]).length) {\n                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex])[nextItemIndex]);\n                this.selectedOptionUpdated = true;\n              } else if (this.optionsToDisplay[selectedItemIndex.groupIndex + 1]) {\n                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex + 1])[0]);\n                this.selectedOptionUpdated = true;\n              }\n            } else {\n              if (this.optionsToDisplay && this.optionsToDisplay.length > 0) {\n                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[0])[0]);\n              }\n            }\n          } else {\n            let selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n            let nextEnabledOption = this.findNextEnabledOption(selectedItemIndex);\n\n            if (nextEnabledOption) {\n              this.selectItem(event, nextEnabledOption);\n              this.selectedOptionUpdated = true;\n            }\n          }\n        }\n\n        event.preventDefault();\n        break;\n      //up\n\n      case 38:\n        if (this.group) {\n          let selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n\n          if (selectedItemIndex !== -1) {\n            let prevItemIndex = selectedItemIndex.itemIndex - 1;\n\n            if (prevItemIndex >= 0) {\n              this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex])[prevItemIndex]);\n              this.selectedOptionUpdated = true;\n            } else if (prevItemIndex < 0) {\n              let prevGroup = this.optionsToDisplay[selectedItemIndex.groupIndex - 1];\n\n              if (prevGroup) {\n                this.selectItem(event, this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1]);\n                this.selectedOptionUpdated = true;\n              }\n            }\n          }\n        } else {\n          let selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n          let prevEnabledOption = this.findPrevEnabledOption(selectedItemIndex);\n\n          if (prevEnabledOption) {\n            this.selectItem(event, prevEnabledOption);\n            this.selectedOptionUpdated = true;\n          }\n        }\n\n        event.preventDefault();\n        break;\n      //space\n\n      case 32:\n        if (search) {\n          if (!this.overlayVisible) {\n            this.show();\n          } else {\n            this.hide();\n          }\n\n          event.preventDefault();\n        }\n\n        break;\n      //enter\n\n      case 13:\n        if (this.overlayVisible && (!this.filter || this.optionsToDisplay && this.optionsToDisplay.length > 0)) {\n          this.hide();\n        } else if (!this.overlayVisible) {\n          this.show();\n        }\n\n        event.preventDefault();\n        break;\n      //escape and tab\n\n      case 27:\n      case 9:\n        this.hide();\n        break;\n      //search item based on keyboard input\n\n      default:\n        if (search && !event.metaKey && event.which !== 17) {\n          this.search(event);\n        }\n\n        break;\n    }\n  }\n\n  search(event) {\n    if (this.searchTimeout) {\n      clearTimeout(this.searchTimeout);\n    }\n\n    const char = event.key;\n    this.previousSearchChar = this.currentSearchChar;\n    this.currentSearchChar = char;\n    if (this.previousSearchChar === this.currentSearchChar) this.searchValue = this.currentSearchChar;else this.searchValue = this.searchValue ? this.searchValue + char : char;\n    let newOption;\n\n    if (this.group) {\n      let searchIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : {\n        groupIndex: 0,\n        itemIndex: 0\n      };\n      newOption = this.searchOptionWithinGroup(searchIndex);\n    } else {\n      let searchIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n      newOption = this.searchOption(++searchIndex);\n    }\n\n    if (newOption && !this.isOptionDisabled(newOption)) {\n      this.selectItem(event, newOption);\n      this.selectedOptionUpdated = true;\n    }\n\n    this.searchTimeout = setTimeout(() => {\n      this.searchValue = null;\n    }, 250);\n  }\n\n  searchOption(index) {\n    let option;\n\n    if (this.searchValue) {\n      option = this.searchOptionInRange(index, this.optionsToDisplay.length);\n\n      if (!option) {\n        option = this.searchOptionInRange(0, index);\n      }\n    }\n\n    return option;\n  }\n\n  searchOptionInRange(start, end) {\n    for (let i = start; i < end; i++) {\n      let opt = this.optionsToDisplay[i];\n\n      if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n        return opt;\n      }\n    }\n\n    return null;\n  }\n\n  searchOptionWithinGroup(index) {\n    let option;\n\n    if (this.searchValue) {\n      for (let i = index.groupIndex; i < this.optionsToDisplay.length; i++) {\n        for (let j = index.groupIndex === i ? index.itemIndex + 1 : 0; j < this.getOptionGroupChildren(this.optionsToDisplay[i]).length; j++) {\n          let opt = this.getOptionGroupChildren(this.optionsToDisplay[i])[j];\n\n          if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n            return opt;\n          }\n        }\n      }\n\n      if (!option) {\n        for (let i = 0; i <= index.groupIndex; i++) {\n          for (let j = 0; j < (index.groupIndex === i ? index.itemIndex : this.getOptionGroupChildren(this.optionsToDisplay[i]).length); j++) {\n            let opt = this.getOptionGroupChildren(this.optionsToDisplay[i])[j];\n\n            if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n              return opt;\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  findOptionIndex(val, opts) {\n    let index = -1;\n\n    if (opts) {\n      for (let i = 0; i < opts.length; i++) {\n        if (val == null && this.getOptionValue(opts[i]) == null || ObjectUtils.equals(val, this.getOptionValue(opts[i]), this.dataKey)) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    return index;\n  }\n\n  findOptionGroupIndex(val, opts) {\n    let groupIndex, itemIndex;\n\n    if (opts) {\n      for (let i = 0; i < opts.length; i++) {\n        groupIndex = i;\n        itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n\n        if (itemIndex !== -1) {\n          break;\n        }\n      }\n    }\n\n    if (itemIndex !== -1) {\n      return {\n        groupIndex: groupIndex,\n        itemIndex: itemIndex\n      };\n    } else {\n      return -1;\n    }\n  }\n\n  findOption(val, opts, inGroup) {\n    if (this.group && !inGroup) {\n      let opt;\n\n      if (opts && opts.length) {\n        for (let optgroup of opts) {\n          opt = this.findOption(val, this.getOptionGroupChildren(optgroup), true);\n\n          if (opt) {\n            break;\n          }\n        }\n      }\n\n      return opt;\n    } else {\n      let index = this.findOptionIndex(val, opts);\n      return index != -1 ? opts[index] : null;\n    }\n  }\n\n  onFilterInputChange(event) {\n    let inputValue = event.target.value;\n\n    if (inputValue && inputValue.length) {\n      this._filterValue = inputValue;\n      this.activateFilter();\n    } else {\n      this._filterValue = null;\n      this.optionsToDisplay = this.options;\n    }\n\n    this.virtualScroll && this.scroller.scrollToIndex(0);\n    this.optionsChanged = true;\n    this.onFilter.emit({\n      originalEvent: event,\n      filter: this._filterValue\n    });\n  }\n\n  activateFilter() {\n    let searchFields = (this.filterBy || this.optionLabel || 'label').split(',');\n\n    if (this.options && this.options.length) {\n      if (this.group) {\n        let filteredGroups = [];\n\n        for (let optgroup of this.options) {\n          let filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n\n          if (filteredSubOptions && filteredSubOptions.length) {\n            filteredGroups.push(Object.assign(Object.assign({}, optgroup), {\n              [this.optionGroupChildren]: filteredSubOptions\n            }));\n          }\n        }\n\n        this.optionsToDisplay = filteredGroups;\n      } else {\n        this.optionsToDisplay = this.filterService.filter(this.options, searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n      }\n\n      this.optionsChanged = true;\n    }\n  }\n\n  applyFocus() {\n    if (this.editable) DomHandler.findSingle(this.el.nativeElement, '.p-dropdown-label.p-inputtext').focus();else DomHandler.findSingle(this.el.nativeElement, 'input[readonly]').focus();\n  }\n\n  focus() {\n    this.applyFocus();\n  }\n\n  clear(event) {\n    this.value = null;\n    this.onModelChange(this.value);\n    this.onChange.emit({\n      originalEvent: event,\n      value: this.value\n    });\n    this.updateSelectedOption(this.value);\n    this.updateEditableLabel();\n    this.onClear.emit(event);\n  }\n\n}\n\nDropdown.ɵfac = function Dropdown_Factory(t) {\n  return new (t || Dropdown)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.FilterService), i0.ɵɵdirectiveInject(i3.PrimeNGConfig));\n};\n\nDropdown.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Dropdown,\n  selectors: [[\"p-dropdown\"]],\n  contentQueries: function Dropdown_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Dropdown_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(_c5, 5);\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(_c7, 5);\n      i0.ɵɵviewQuery(_c8, 5);\n      i0.ɵɵviewQuery(_c9, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accessibleViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editableInputViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemsViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.overlayViewChild = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n  hostVars: 4,\n  hostBindings: function Dropdown_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focused || ctx.overlayVisible);\n    }\n  },\n  inputs: {\n    scrollHeight: \"scrollHeight\",\n    filter: \"filter\",\n    name: \"name\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    readonly: \"readonly\",\n    required: \"required\",\n    editable: \"editable\",\n    appendTo: \"appendTo\",\n    tabindex: \"tabindex\",\n    placeholder: \"placeholder\",\n    filterPlaceholder: \"filterPlaceholder\",\n    filterLocale: \"filterLocale\",\n    inputId: \"inputId\",\n    selectId: \"selectId\",\n    dataKey: \"dataKey\",\n    filterBy: \"filterBy\",\n    autofocus: \"autofocus\",\n    resetFilterOnHide: \"resetFilterOnHide\",\n    dropdownIcon: \"dropdownIcon\",\n    optionLabel: \"optionLabel\",\n    optionValue: \"optionValue\",\n    optionDisabled: \"optionDisabled\",\n    optionGroupLabel: \"optionGroupLabel\",\n    optionGroupChildren: \"optionGroupChildren\",\n    autoDisplayFirst: \"autoDisplayFirst\",\n    group: \"group\",\n    showClear: \"showClear\",\n    emptyFilterMessage: \"emptyFilterMessage\",\n    emptyMessage: \"emptyMessage\",\n    lazy: \"lazy\",\n    virtualScroll: \"virtualScroll\",\n    virtualScrollItemSize: \"virtualScrollItemSize\",\n    virtualScrollOptions: \"virtualScrollOptions\",\n    overlayOptions: \"overlayOptions\",\n    ariaFilterLabel: \"ariaFilterLabel\",\n    ariaLabel: \"ariaLabel\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    filterMatchMode: \"filterMatchMode\",\n    maxlength: \"maxlength\",\n    tooltip: \"tooltip\",\n    tooltipPosition: \"tooltipPosition\",\n    tooltipPositionStyle: \"tooltipPositionStyle\",\n    tooltipStyleClass: \"tooltipStyleClass\",\n    autofocusFilter: \"autofocusFilter\",\n    overlayDirection: \"overlayDirection\",\n    disabled: \"disabled\",\n    itemSize: \"itemSize\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    options: \"options\",\n    filterValue: \"filterValue\"\n  },\n  outputs: {\n    onChange: \"onChange\",\n    onFilter: \"onFilter\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onClick: \"onClick\",\n    onShow: \"onShow\",\n    onHide: \"onHide\",\n    onClear: \"onClear\",\n    onLazyLoad: \"onLazyLoad\"\n  },\n  features: [i0.ɵɵProvidersFeature([DROPDOWN_VALUE_ACCESSOR])],\n  decls: 14,\n  vars: 32,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [\"container\", \"\"], [1, \"p-hidden-accessible\"], [\"type\", \"text\", \"readonly\", \"\", \"aria-haspopup\", \"listbox\", \"aria-haspopup\", \"listbox\", \"pAutoFocus\", \"\", \"role\", \"combobox\", 3, \"disabled\", \"autofocus\", \"focus\", \"blur\", \"keydown\"], [\"in\", \"\"], [3, \"ngClass\", \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngIf\"], [\"type\", \"text\", \"class\", \"p-dropdown-label p-inputtext\", \"aria-haspopup\", \"listbox\", 3, \"disabled\", \"input\", \"focus\", \"blur\", 4, \"ngIf\"], [\"class\", \"p-dropdown-clear-icon pi pi-times\", 3, \"click\", 4, \"ngIf\"], [\"role\", \"button\", \"aria-label\", \"dropdown trigger\", \"aria-haspopup\", \"listbox\", 1, \"p-dropdown-trigger\"], [1, \"p-dropdown-trigger-icon\", 3, \"ngClass\"], [3, \"visible\", \"options\", \"target\", \"appendTo\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\", \"visibleChange\", \"onAnimationStart\", \"onHide\"], [\"overlay\", \"\"], [\"pTemplate\", \"content\"], [3, \"ngClass\", \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngClass\"], [\"type\", \"text\", \"aria-haspopup\", \"listbox\", 1, \"p-dropdown-label\", \"p-inputtext\", 3, \"disabled\", \"input\", \"focus\", \"blur\"], [\"editableInput\", \"\"], [1, \"p-dropdown-clear-icon\", \"pi\", \"pi-times\", 3, \"click\"], [3, \"ngClass\", \"ngStyle\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-dropdown-header\", 3, \"click\", 4, \"ngIf\"], [1, \"p-dropdown-items-wrapper\"], [3, \"items\", \"style\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\", 4, \"ngIf\"], [\"buildInItems\", \"\"], [1, \"p-dropdown-header\", 3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"builtInFilterElement\", \"\"], [1, \"p-dropdown-filter-container\"], [\"type\", \"text\", \"autocomplete\", \"off\", 1, \"p-dropdown-filter\", \"p-inputtext\", \"p-component\", 3, \"value\", \"keydown.enter\", \"keydown\", \"input\"], [\"filter\", \"\"], [1, \"p-dropdown-filter-icon\", \"pi\", \"pi-search\"], [3, \"items\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\"], [\"scroller\", \"\"], [\"pTemplate\", \"loader\"], [\"role\", \"listbox\", 1, \"p-dropdown-items\", 3, \"ngClass\"], [\"items\", \"\"], [\"itemslist\", \"\"], [\"class\", \"p-dropdown-empty-message\", 3, \"ngStyle\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-dropdown-item-group\", 3, \"ngStyle\"], [3, \"option\", \"selected\", \"label\", \"disabled\", \"template\", \"onClick\"], [1, \"p-dropdown-empty-message\", 3, \"ngStyle\"], [\"emptyFilter\", \"\"], [\"empty\", \"\"]],\n  template: function Dropdown_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"click\", function Dropdown_Template_div_click_0_listener($event) {\n        return ctx.onMouseclick($event);\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"input\", 3, 4);\n      i0.ɵɵlistener(\"focus\", function Dropdown_Template_input_focus_3_listener($event) {\n        return ctx.onInputFocus($event);\n      })(\"blur\", function Dropdown_Template_input_blur_3_listener($event) {\n        return ctx.onInputBlur($event);\n      })(\"keydown\", function Dropdown_Template_input_keydown_3_listener($event) {\n        return ctx.onKeydown($event, true);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, Dropdown_span_5_Template, 3, 13, \"span\", 5);\n      i0.ɵɵtemplate(6, Dropdown_span_6_Template, 2, 4, \"span\", 6);\n      i0.ɵɵtemplate(7, Dropdown_input_7_Template, 2, 4, \"input\", 7);\n      i0.ɵɵtemplate(8, Dropdown_i_8_Template, 1, 0, \"i\", 8);\n      i0.ɵɵelementStart(9, \"div\", 9);\n      i0.ɵɵelement(10, \"span\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p-overlay\", 11, 12);\n      i0.ɵɵlistener(\"visibleChange\", function Dropdown_Template_p_overlay_visibleChange_11_listener($event) {\n        return ctx.overlayVisible = $event;\n      })(\"onAnimationStart\", function Dropdown_Template_p_overlay_onAnimationStart_11_listener($event) {\n        return ctx.onOverlayAnimationStart($event);\n      })(\"onHide\", function Dropdown_Template_p_overlay_onHide_11_listener() {\n        return ctx.hide();\n      });\n      i0.ɵɵtemplate(13, Dropdown_ng_template_13_Template, 9, 11, \"ng-template\", 13);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(27, _c16, ctx.disabled, ctx.overlayVisible, ctx.focused, ctx.showClear && !ctx.disabled))(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"autofocus\", ctx.autofocus);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"placeholder\", ctx.placeholder)(\"aria-label\", ctx.ariaLabel)(\"aria-expanded\", false)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"tabindex\", ctx.tabindex)(\"aria-activedescendant\", ctx.overlayVisible ? ctx.labelId : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editable && ctx.label != null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editable && ctx.label == null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.editable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isVisibleClearIcon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-expanded\", ctx.overlayVisible);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.dropdownIcon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"visible\", ctx.overlayVisible)(\"options\", ctx.overlayOptions)(\"target\", \"@parent\")(\"appendTo\", ctx.appendTo)(\"autoZIndex\", ctx.autoZIndex)(\"baseZIndex\", ctx.baseZIndex)(\"showTransitionOptions\", ctx.showTransitionOptions)(\"hideTransitionOptions\", ctx.hideTransitionOptions);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i4.Overlay, i3.PrimeTemplate, i5.Tooltip, i6.Scroller, i7.AutoFocus, DropdownItem],\n  styles: [\".p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;visibility:hidden}input.p-dropdown-label{cursor:default}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dropdown, [{\n    type: Component,\n    args: [{\n      selector: 'p-dropdown',\n      template: `\n        <div\n            #container\n            [ngClass]=\"{ 'p-dropdown p-component': true, 'p-disabled': disabled, 'p-dropdown-open': overlayVisible, 'p-focus': focused, 'p-dropdown-clearable': showClear && !disabled }\"\n            (click)=\"onMouseclick($event)\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n        >\n            <div class=\"p-hidden-accessible\">\n                <input\n                    #in\n                    [attr.id]=\"inputId\"\n                    type=\"text\"\n                    readonly\n                    (focus)=\"onInputFocus($event)\"\n                    aria-haspopup=\"listbox\"\n                    [attr.placeholder]=\"placeholder\"\n                    aria-haspopup=\"listbox\"\n                    [attr.aria-label]=\"ariaLabel\"\n                    [attr.aria-expanded]=\"false\"\n                    [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    (blur)=\"onInputBlur($event)\"\n                    (keydown)=\"onKeydown($event, true)\"\n                    [disabled]=\"disabled\"\n                    [attr.tabindex]=\"tabindex\"\n                    pAutoFocus\n                    [autofocus]=\"autofocus\"\n                    [attr.aria-activedescendant]=\"overlayVisible ? labelId : null\"\n                    role=\"combobox\"\n                />\n            </div>\n            <span\n                [attr.id]=\"labelId\"\n                [ngClass]=\"{ 'p-dropdown-label p-inputtext': true, 'p-dropdown-label-empty': label == null || label.length === 0 }\"\n                *ngIf=\"!editable && label != null\"\n                [pTooltip]=\"tooltip\"\n                [tooltipPosition]=\"tooltipPosition\"\n                [positionStyle]=\"tooltipPositionStyle\"\n                [tooltipStyleClass]=\"tooltipStyleClass\"\n            >\n                <ng-container *ngIf=\"!selectedItemTemplate\">{{ label || 'empty' }}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedOption }\"></ng-container>\n            </span>\n            <span [ngClass]=\"{ 'p-dropdown-label p-inputtext p-placeholder': true, 'p-dropdown-label-empty': placeholder == null || placeholder.length === 0 }\" *ngIf=\"!editable && label == null\">{{ placeholder || 'empty' }}</span>\n            <input\n                #editableInput\n                type=\"text\"\n                [attr.maxlength]=\"maxlength\"\n                class=\"p-dropdown-label p-inputtext\"\n                *ngIf=\"editable\"\n                [disabled]=\"disabled\"\n                [attr.placeholder]=\"placeholder\"\n                aria-haspopup=\"listbox\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                (input)=\"onEditableInputChange($event)\"\n                (focus)=\"onEditableInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <i class=\"p-dropdown-clear-icon pi pi-times\" (click)=\"clear($event)\" *ngIf=\"isVisibleClearIcon\"></i>\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\">\n                <span class=\"p-dropdown-trigger-icon\" [ngClass]=\"dropdownIcon\"></span>\n            </div>\n            <p-overlay\n                #overlay\n                [(visible)]=\"overlayVisible\"\n                [options]=\"overlayOptions\"\n                [target]=\"'@parent'\"\n                [appendTo]=\"appendTo\"\n                [autoZIndex]=\"autoZIndex\"\n                [baseZIndex]=\"baseZIndex\"\n                [showTransitionOptions]=\"showTransitionOptions\"\n                [hideTransitionOptions]=\"hideTransitionOptions\"\n                (onAnimationStart)=\"onOverlayAnimationStart($event)\"\n                (onHide)=\"hide()\"\n            >\n                <ng-template pTemplate=\"content\">\n                    <div [ngClass]=\"'p-dropdown-panel p-component'\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                        <div class=\"p-dropdown-header\" *ngIf=\"filter\" (click)=\"$event.stopPropagation()\">\n                            <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                                <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                            </ng-container>\n                            <ng-template #builtInFilterElement>\n                                <div class=\"p-dropdown-filter-container\">\n                                    <input\n                                        #filter\n                                        type=\"text\"\n                                        autocomplete=\"off\"\n                                        [value]=\"filterValue || ''\"\n                                        class=\"p-dropdown-filter p-inputtext p-component\"\n                                        [attr.placeholder]=\"filterPlaceholder\"\n                                        (keydown.enter)=\"$event.preventDefault()\"\n                                        (keydown)=\"onKeydown($event, false)\"\n                                        (input)=\"onFilterInputChange($event)\"\n                                        [attr.aria-label]=\"ariaFilterLabel\"\n                                        [attr.aria-activedescendant]=\"overlayVisible ? 'p-highlighted-option' : labelId\"\n                                    />\n                                    <span class=\"p-dropdown-filter-icon pi pi-search\"></span>\n                                </div>\n                            </ng-template>\n                        </div>\n                        <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                            <p-scroller\n                                *ngIf=\"virtualScroll\"\n                                #scroller\n                                [items]=\"optionsToDisplay\"\n                                [style]=\"{ height: scrollHeight }\"\n                                [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                                [autoSize]=\"true\"\n                                [lazy]=\"lazy\"\n                                (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                                [options]=\"virtualScrollOptions\"\n                            >\n                                <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                                </ng-template>\n                                <ng-container *ngIf=\"loaderTemplate\">\n                                    <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                                        <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                                    </ng-template>\n                                </ng-container>\n                            </p-scroller>\n                            <ng-container *ngIf=\"!virtualScroll\">\n                                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: optionsToDisplay, options: {} }\"></ng-container>\n                            </ng-container>\n\n                            <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                                <ul #items [attr.id]=\"listId\" class=\"p-dropdown-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\" role=\"listbox\">\n                                    <ng-container *ngIf=\"group\">\n                                        <ng-template ngFor let-optgroup [ngForOf]=\"items\">\n                                            <li class=\"p-dropdown-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                                            </li>\n                                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup), selectedOption: selectedOption }\"></ng-container>\n                                        </ng-template>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"!group\">\n                                        <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: items, selectedOption: selectedOption }\"></ng-container>\n                                    </ng-container>\n                                    <ng-template #itemslist let-options let-selectedOption=\"selectedOption\">\n                                        <ng-template ngFor let-option let-i=\"index\" [ngForOf]=\"options\">\n                                            <p-dropdownItem\n                                                [option]=\"option\"\n                                                [selected]=\"selectedOption == option\"\n                                                [label]=\"getOptionLabel(option)\"\n                                                [disabled]=\"isOptionDisabled(option)\"\n                                                (onClick)=\"onItemClick($event)\"\n                                                [template]=\"itemTemplate\"\n                                            ></p-dropdownItem>\n                                        </ng-template>\n                                    </ng-template>\n                                    <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                            {{ emptyFilterMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                                    </li>\n                                    <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                            {{ emptyMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                                    </li>\n                                </ul>\n                            </ng-template>\n                        </div>\n                        <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                    </div>\n                </ng-template>\n            </p-overlay>\n        </div>\n    `,\n      host: {\n        class: 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focused || overlayVisible'\n      },\n      providers: [DROPDOWN_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;visibility:hidden}input.p-dropdown-label{cursor:default}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.FilterService\n    }, {\n      type: i3.PrimeNGConfig\n    }];\n  }, {\n    scrollHeight: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    filterPlaceholder: [{\n      type: Input\n    }],\n    filterLocale: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    selectId: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    filterBy: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    resetFilterOnHide: [{\n      type: Input\n    }],\n    dropdownIcon: [{\n      type: Input\n    }],\n    optionLabel: [{\n      type: Input\n    }],\n    optionValue: [{\n      type: Input\n    }],\n    optionDisabled: [{\n      type: Input\n    }],\n    optionGroupLabel: [{\n      type: Input\n    }],\n    optionGroupChildren: [{\n      type: Input\n    }],\n    autoDisplayFirst: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    showClear: [{\n      type: Input\n    }],\n    emptyFilterMessage: [{\n      type: Input\n    }],\n    emptyMessage: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    virtualScrollItemSize: [{\n      type: Input\n    }],\n    virtualScrollOptions: [{\n      type: Input\n    }],\n    overlayOptions: [{\n      type: Input\n    }],\n    ariaFilterLabel: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    filterMatchMode: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    tooltipPosition: [{\n      type: Input\n    }],\n    tooltipPositionStyle: [{\n      type: Input\n    }],\n    tooltipStyleClass: [{\n      type: Input\n    }],\n    autofocusFilter: [{\n      type: Input\n    }],\n    overlayDirection: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onFilter: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    filterViewChild: [{\n      type: ViewChild,\n      args: ['filter']\n    }],\n    accessibleViewChild: [{\n      type: ViewChild,\n      args: ['in']\n    }],\n    editableInputViewChild: [{\n      type: ViewChild,\n      args: ['editableInput']\n    }],\n    itemsViewChild: [{\n      type: ViewChild,\n      args: ['items']\n    }],\n    scroller: [{\n      type: ViewChild,\n      args: ['scroller']\n    }],\n    overlayViewChild: [{\n      type: ViewChild,\n      args: ['overlay']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    disabled: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    filterValue: [{\n      type: Input\n    }]\n  });\n})();\n\nclass DropdownModule {}\n\nDropdownModule.ɵfac = function DropdownModule_Factory(t) {\n  return new (t || DropdownModule)();\n};\n\nDropdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DropdownModule\n});\nDropdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, OverlayModule, SharedModule, ScrollerModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule],\n      exports: [Dropdown, OverlayModule, SharedModule, ScrollerModule],\n      declarations: [Dropdown, DropdownItem]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DROPDOWN_VALUE_ACCESSOR, Dropdown, DropdownItem, DropdownModule };","map":{"version":3,"names":["i1","CommonModule","i0","forwardRef","EventEmitter","Component","Input","Output","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","ContentChildren","NgModule","NG_VALUE_ACCESSOR","i3","LicenseManager","TranslationKeys","PrimeTemplate","SharedModule","i7","AutoFocusModule","DomHandler","i4","OverlayModule","i2","RippleModule","i6","ScrollerModule","i5","TooltipModule","UniqueComponentId","ObjectUtils","DROPDOWN_VALUE_ACCESSOR","provide","useExisting","Dropdown","multi","DropdownItem","constructor","onClick","onOptionClick","event","emit","originalEvent","option","ɵfac","ɵcmp","NgClass","NgIf","NgTemplateOutlet","NgStyle","Ripple","type","args","selector","template","host","class","selected","label","disabled","visible","itemSize","el","renderer","cd","zone","filterService","config","scrollHeight","resetFilterOnHide","dropdownIcon","optionGroupChildren","autoDisplayFirst","emptyFilterMessage","emptyMessage","lazy","filterMatchMode","tooltip","tooltipPosition","tooltipPositionStyle","autofocusFilter","overlayDirection","onChange","onFilter","onFocus","onBlur","onShow","onHide","onClear","onLazyLoad","onModelChange","onModelTouched","id","_disabled","focused","overlayVisible","hide","destroyed","detectChanges","_itemSize","val","console","warn","autoZIndex","_autoZIndex","baseZIndex","_baseZIndex","showTransitionOptions","_showTransitionOptions","hideTransitionOptions","_hideTransitionOptions","ngAfterContentInit","templates","forEach","item","getType","itemTemplate","selectedItemTemplate","headerTemplate","filterTemplate","footerTemplate","emptyFilterTemplate","emptyTemplate","groupTemplate","loaderTemplate","ngOnInit","optionsToDisplay","options","updateSelectedOption","labelId","listId","filterBy","filterOptions","filter","value","onFilterInputChange","reset","resetFilter","_options","selectedOption","findOption","isNotEmpty","editable","optionsChanged","_filterValue","length","activateFilter","filterValue","ngAfterViewInit","updateEditableLabel","check","getOptionLabel","emptyMessageLabel","getTranslation","EMPTY_MESSAGE","emptyFilterMessageLabel","EMPTY_FILTER_MESSAGE","filled","undefined","isVisibleClearIcon","showClear","editableInputViewChild","nativeElement","optionLabel","resolveFieldData","getOptionValue","optionValue","isOptionDisabled","optionDisabled","getOptionGroupLabel","optionGroup","optionGroupLabel","getOptionGroupChildren","items","onItemClick","selectItem","accessibleViewChild","focus","preventScroll","setTimeout","ngAfterViewChecked","runOutsideAngular","overlayViewChild","alignOverlay","selectedOptionUpdated","itemsWrapper","selectedItem","findSingle","scrollInView","writeValue","markForCheck","filterViewChild","placeholder","group","registerOnChange","fn","registerOnTouched","setDisabledState","onMouseclick","readonly","isInputClick","show","hasClass","target","isSameNode","isEmpty","onEditableInputFocus","onEditableInputChange","onOverlayAnimationStart","toState","virtualScroll","scroller","setContentEl","itemsViewChild","selectedIndex","findOptionIndex","scrollToIndex","selectedListItem","scrollIntoView","block","inline","preventModelTouched","onInputFocus","onInputBlur","findPrevEnabledOption","index","prevEnabledOption","i","findNextEnabledOption","nextEnabledOption","onKeydown","search","which","altKey","selectedItemIndex","findOptionGroupIndex","nextItemIndex","itemIndex","groupIndex","preventDefault","prevItemIndex","prevGroup","metaKey","searchTimeout","clearTimeout","char","key","previousSearchChar","currentSearchChar","searchValue","newOption","searchIndex","searchOptionWithinGroup","searchOption","searchOptionInRange","start","end","opt","toLocaleLowerCase","filterLocale","startsWith","j","opts","equals","dataKey","inGroup","optgroup","inputValue","searchFields","split","filteredGroups","filteredSubOptions","push","Object","assign","applyFocus","clear","ElementRef","Renderer2","ChangeDetectorRef","NgZone","FilterService","PrimeNGConfig","NgForOf","Overlay","Tooltip","Scroller","AutoFocus","providers","changeDetection","OnPush","encapsulation","None","styles","name","style","panelStyle","styleClass","panelStyleClass","required","appendTo","tabindex","filterPlaceholder","inputId","selectId","autofocus","virtualScrollItemSize","virtualScrollOptions","overlayOptions","ariaFilterLabel","ariaLabel","ariaLabelledBy","maxlength","tooltipStyleClass","containerViewChild","DropdownModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Projects/BrickWall/ClientApp/node_modules/primeng/fesm2015/primeng-dropdown.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, Input, Output, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/api';\nimport { LicenseManager, TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i7 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\nimport { DomHandler } from 'primeng/dom';\nimport * as i4 from 'primeng/overlay';\nimport { OverlayModule } from 'primeng/overlay';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i6 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i5 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { UniqueComponentId, ObjectUtils } from 'primeng/utils';\n\nconst DROPDOWN_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Dropdown),\n    multi: true\n};\nclass DropdownItem {\n    constructor() {\n        this.onClick = new EventEmitter();\n    }\n    onOptionClick(event) {\n        this.onClick.emit({\n            originalEvent: event,\n            option: this.option\n        });\n    }\n}\nDropdownItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: DropdownItem, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDropdownItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.7\", type: DropdownItem, selector: \"p-dropdownItem\", inputs: { option: \"option\", selected: \"selected\", label: \"label\", disabled: \"disabled\", visible: \"visible\", itemSize: \"itemSize\", template: \"template\" }, outputs: { onClick: \"onClick\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <li\n            (click)=\"onOptionClick($event)\"\n            role=\"option\"\n            pRipple\n            [attr.aria-label]=\"label\"\n            [attr.aria-selected]=\"selected\"\n            [ngStyle]=\"{ height: itemSize + 'px' }\"\n            [id]=\"selected ? 'p-highlighted-option' : ''\"\n            [ngClass]=\"{ 'p-dropdown-item': true, 'p-highlight': selected, 'p-disabled': disabled }\"\n        >\n            <span *ngIf=\"!template\">{{ label || 'empty' }}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: { $implicit: option }\"></ng-container>\n        </li>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.Ripple, selector: \"[pRipple]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: DropdownItem, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-dropdownItem',\n                    template: `\n        <li\n            (click)=\"onOptionClick($event)\"\n            role=\"option\"\n            pRipple\n            [attr.aria-label]=\"label\"\n            [attr.aria-selected]=\"selected\"\n            [ngStyle]=\"{ height: itemSize + 'px' }\"\n            [id]=\"selected ? 'p-highlighted-option' : ''\"\n            [ngClass]=\"{ 'p-dropdown-item': true, 'p-highlight': selected, 'p-disabled': disabled }\"\n        >\n            <span *ngIf=\"!template\">{{ label || 'empty' }}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: { $implicit: option }\"></ng-container>\n        </li>\n    `,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], propDecorators: { option: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }], itemSize: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], onClick: [{\n                type: Output\n            }] } });\nclass Dropdown {\n    constructor(el, renderer, cd, zone, filterService, config) {\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.zone = zone;\n        this.filterService = filterService;\n        this.config = config;\n        this.scrollHeight = '200px';\n        this.resetFilterOnHide = false;\n        this.dropdownIcon = 'pi pi-chevron-down';\n        this.optionGroupChildren = 'items';\n        this.autoDisplayFirst = true;\n        this.emptyFilterMessage = '';\n        this.emptyMessage = '';\n        this.lazy = false;\n        this.filterMatchMode = 'contains';\n        this.tooltip = '';\n        this.tooltipPosition = 'right';\n        this.tooltipPositionStyle = 'absolute';\n        this.autofocusFilter = true;\n        this.overlayDirection = 'end';\n        this.onChange = new EventEmitter();\n        this.onFilter = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onClick = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.onClear = new EventEmitter();\n        this.onLazyLoad = new EventEmitter();\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n        this.id = UniqueComponentId();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(_disabled) {\n        if (_disabled) {\n            this.focused = false;\n            if (this.overlayVisible)\n                this.hide();\n        }\n        this._disabled = _disabled;\n        if (!this.cd.destroyed) {\n            this.cd.detectChanges();\n        }\n    }\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(val) {\n        this._itemSize = val;\n        console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n    }\n    get autoZIndex() {\n        return this._autoZIndex;\n    }\n    set autoZIndex(val) {\n        this._autoZIndex = val;\n        console.warn('The autoZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    get baseZIndex() {\n        return this._baseZIndex;\n    }\n    set baseZIndex(val) {\n        this._baseZIndex = val;\n        console.warn('The baseZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    get showTransitionOptions() {\n        return this._showTransitionOptions;\n    }\n    set showTransitionOptions(val) {\n        this._showTransitionOptions = val;\n        console.warn('The showTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    get hideTransitionOptions() {\n        return this._hideTransitionOptions;\n    }\n    set hideTransitionOptions(val) {\n        this._hideTransitionOptions = val;\n        console.warn('The hideTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'selectedItem':\n                    this.selectedItemTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'emptyfilter':\n                    this.emptyFilterTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                case 'loader':\n                    this.loaderTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngOnInit() {\n        this.optionsToDisplay = this.options;\n        this.updateSelectedOption(null);\n        this.labelId = this.id + '_label';\n        this.listId = this.id + '_list';\n        if (this.filterBy) {\n            this.filterOptions = {\n                filter: (value) => this.onFilterInputChange(value),\n                reset: () => this.resetFilter()\n            };\n        }\n    }\n    get options() {\n        return this._options;\n    }\n    set options(val) {\n        this._options = val;\n        this.optionsToDisplay = this._options;\n        this.updateSelectedOption(this.value);\n        this.selectedOption = this.findOption(this.value, this.optionsToDisplay);\n        if (!this.selectedOption && ObjectUtils.isNotEmpty(this.value) && !this.editable) {\n            this.value = null;\n            this.onModelChange(this.value);\n        }\n        this.optionsChanged = true;\n        if (this._filterValue && this._filterValue.length) {\n            this.activateFilter();\n        }\n    }\n    get filterValue() {\n        return this._filterValue;\n    }\n    set filterValue(val) {\n        this._filterValue = val;\n        this.activateFilter();\n    }\n    ngAfterViewInit() {\n        if (this.editable) {\n            this.updateEditableLabel();\n        }\n        LicenseManager.check();\n    }\n    get label() {\n        return this.selectedOption ? this.getOptionLabel(this.selectedOption) : null;\n    }\n    get emptyMessageLabel() {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    get emptyFilterMessageLabel() {\n        return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n    }\n    get filled() {\n        if (typeof this.value === 'string')\n            return !!this.value;\n        return this.value || this.value != null || this.value != undefined;\n    }\n    get isVisibleClearIcon() {\n        return this.value != null && this.value !== '' && this.showClear && !this.disabled;\n    }\n    updateEditableLabel() {\n        if (this.editableInputViewChild && this.editableInputViewChild.nativeElement) {\n            this.editableInputViewChild.nativeElement.value = this.selectedOption ? this.getOptionLabel(this.selectedOption) : this.value || '';\n        }\n    }\n    getOptionLabel(option) {\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option && option.label !== undefined ? option.label : option;\n    }\n    getOptionValue(option) {\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : !this.optionLabel && option && option.value !== undefined ? option.value : option;\n    }\n    isOptionDisabled(option) {\n        return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option && option.disabled !== undefined ? option.disabled : false;\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup && optionGroup.label !== undefined ? optionGroup.label : optionGroup;\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    onItemClick(event) {\n        const option = event.option;\n        if (!this.isOptionDisabled(option)) {\n            this.selectItem(event.originalEvent, option);\n            this.accessibleViewChild.nativeElement.focus({ preventScroll: true });\n        }\n        setTimeout(() => {\n            this.hide();\n        }, 1);\n    }\n    selectItem(event, option) {\n        if (this.selectedOption != option) {\n            this.selectedOption = option;\n            this.value = this.getOptionValue(option);\n            this.onModelChange(this.value);\n            this.updateEditableLabel();\n            this.onChange.emit({\n                originalEvent: event,\n                value: this.value\n            });\n        }\n    }\n    ngAfterViewChecked() {\n        if (this.optionsChanged && this.overlayVisible) {\n            this.optionsChanged = false;\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    if (this.overlayViewChild) {\n                        this.overlayViewChild.alignOverlay();\n                    }\n                }, 1);\n            });\n        }\n        if (this.selectedOptionUpdated && this.itemsWrapper) {\n            let selectedItem = DomHandler.findSingle(this.overlayViewChild.el.nativeElement, 'li.p-highlight');\n            if (selectedItem) {\n                DomHandler.scrollInView(this.itemsWrapper, DomHandler.findSingle(this.overlayViewChild.el.nativeElement, 'li.p-highlight'));\n            }\n            this.selectedOptionUpdated = false;\n        }\n    }\n    writeValue(value) {\n        if (this.filter) {\n            this.resetFilter();\n        }\n        this.value = value;\n        this.updateSelectedOption(value);\n        this.updateEditableLabel();\n        this.cd.markForCheck();\n    }\n    resetFilter() {\n        this._filterValue = null;\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n            this.filterViewChild.nativeElement.value = '';\n        }\n        this.optionsToDisplay = this.options;\n    }\n    updateSelectedOption(val) {\n        this.selectedOption = this.findOption(val, this.optionsToDisplay);\n        if (this.autoDisplayFirst && !this.placeholder && !this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length && !this.editable) {\n            if (this.group) {\n                this.selectedOption = this.optionsToDisplay[0].items[0];\n            }\n            else {\n                this.selectedOption = this.optionsToDisplay[0];\n            }\n            this.value = this.getOptionValue(this.selectedOption);\n            this.onModelChange(this.value);\n        }\n        this.selectedOptionUpdated = true;\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    onMouseclick(event) {\n        if (this.disabled || this.readonly || this.isInputClick(event)) {\n            return;\n        }\n        this.onClick.emit(event);\n        this.accessibleViewChild.nativeElement.focus({ preventScroll: true });\n        if (this.overlayVisible)\n            this.hide();\n        else\n            this.show();\n        this.cd.detectChanges();\n    }\n    isInputClick(event) {\n        return DomHandler.hasClass(event.target, 'p-dropdown-clear-icon') || event.target.isSameNode(this.accessibleViewChild.nativeElement) || (this.editableInputViewChild && event.target.isSameNode(this.editableInputViewChild.nativeElement));\n    }\n    isEmpty() {\n        return !this.optionsToDisplay || (this.optionsToDisplay && this.optionsToDisplay.length === 0);\n    }\n    onEditableInputFocus(event) {\n        this.focused = true;\n        this.hide();\n        this.onFocus.emit(event);\n    }\n    onEditableInputChange(event) {\n        this.value = event.target.value;\n        this.updateSelectedOption(this.value);\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    }\n    show() {\n        this.overlayVisible = true;\n        this.cd.markForCheck();\n    }\n    onOverlayAnimationStart(event) {\n        if (event.toState === 'visible') {\n            this.itemsWrapper = DomHandler.findSingle(this.overlayViewChild.el.nativeElement, this.virtualScroll ? '.p-scroller' : '.p-dropdown-items-wrapper');\n            this.virtualScroll && this.scroller.setContentEl(this.itemsViewChild.nativeElement);\n            if (this.options && this.options.length) {\n                if (this.virtualScroll) {\n                    const selectedIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                    if (selectedIndex !== -1) {\n                        this.scroller.scrollToIndex(selectedIndex);\n                    }\n                }\n                else {\n                    let selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.p-dropdown-item.p-highlight');\n                    if (selectedListItem) {\n                        selectedListItem.scrollIntoView({ block: 'nearest', inline: 'center' });\n                    }\n                }\n            }\n            if (this.filterViewChild && this.filterViewChild.nativeElement) {\n                this.preventModelTouched = true;\n                if (this.autofocusFilter) {\n                    this.filterViewChild.nativeElement.focus();\n                }\n            }\n            this.onShow.emit(event);\n        }\n        if (event.toState === 'void') {\n            this.itemsWrapper = null;\n            this.onModelTouched();\n            this.onHide.emit(event);\n        }\n    }\n    hide() {\n        this.overlayVisible = false;\n        if (this.filter && this.resetFilterOnHide) {\n            this.resetFilter();\n        }\n        this.cd.markForCheck();\n    }\n    onInputFocus(event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    }\n    onInputBlur(event) {\n        this.focused = false;\n        this.onBlur.emit(event);\n        if (!this.preventModelTouched) {\n            this.onModelTouched();\n        }\n        this.preventModelTouched = false;\n    }\n    findPrevEnabledOption(index) {\n        let prevEnabledOption;\n        if (this.optionsToDisplay && this.optionsToDisplay.length) {\n            for (let i = index - 1; 0 <= i; i--) {\n                let option = this.optionsToDisplay[i];\n                if (this.isOptionDisabled(option)) {\n                    continue;\n                }\n                else {\n                    prevEnabledOption = option;\n                    break;\n                }\n            }\n            if (!prevEnabledOption) {\n                for (let i = this.optionsToDisplay.length - 1; i >= index; i--) {\n                    let option = this.optionsToDisplay[i];\n                    if (this.isOptionDisabled(option)) {\n                        continue;\n                    }\n                    else {\n                        prevEnabledOption = option;\n                        break;\n                    }\n                }\n            }\n        }\n        return prevEnabledOption;\n    }\n    findNextEnabledOption(index) {\n        let nextEnabledOption;\n        if (this.optionsToDisplay && this.optionsToDisplay.length) {\n            for (let i = index + 1; i < this.optionsToDisplay.length; i++) {\n                let option = this.optionsToDisplay[i];\n                if (this.isOptionDisabled(option)) {\n                    continue;\n                }\n                else {\n                    nextEnabledOption = option;\n                    break;\n                }\n            }\n            if (!nextEnabledOption) {\n                for (let i = 0; i < index; i++) {\n                    let option = this.optionsToDisplay[i];\n                    if (this.isOptionDisabled(option)) {\n                        continue;\n                    }\n                    else {\n                        nextEnabledOption = option;\n                        break;\n                    }\n                }\n            }\n        }\n        return nextEnabledOption;\n    }\n    onKeydown(event, search) {\n        if (this.readonly || !this.optionsToDisplay || this.optionsToDisplay.length === null) {\n            return;\n        }\n        switch (event.which) {\n            //down\n            case 40:\n                if (!this.overlayVisible && event.altKey) {\n                    this.show();\n                }\n                else {\n                    if (this.group) {\n                        let selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                        if (selectedItemIndex !== -1) {\n                            let nextItemIndex = selectedItemIndex.itemIndex + 1;\n                            if (nextItemIndex < this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex]).length) {\n                                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex])[nextItemIndex]);\n                                this.selectedOptionUpdated = true;\n                            }\n                            else if (this.optionsToDisplay[selectedItemIndex.groupIndex + 1]) {\n                                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex + 1])[0]);\n                                this.selectedOptionUpdated = true;\n                            }\n                        }\n                        else {\n                            if (this.optionsToDisplay && this.optionsToDisplay.length > 0) {\n                                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[0])[0]);\n                            }\n                        }\n                    }\n                    else {\n                        let selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                        let nextEnabledOption = this.findNextEnabledOption(selectedItemIndex);\n                        if (nextEnabledOption) {\n                            this.selectItem(event, nextEnabledOption);\n                            this.selectedOptionUpdated = true;\n                        }\n                    }\n                }\n                event.preventDefault();\n                break;\n            //up\n            case 38:\n                if (this.group) {\n                    let selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                    if (selectedItemIndex !== -1) {\n                        let prevItemIndex = selectedItemIndex.itemIndex - 1;\n                        if (prevItemIndex >= 0) {\n                            this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex])[prevItemIndex]);\n                            this.selectedOptionUpdated = true;\n                        }\n                        else if (prevItemIndex < 0) {\n                            let prevGroup = this.optionsToDisplay[selectedItemIndex.groupIndex - 1];\n                            if (prevGroup) {\n                                this.selectItem(event, this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1]);\n                                this.selectedOptionUpdated = true;\n                            }\n                        }\n                    }\n                }\n                else {\n                    let selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                    let prevEnabledOption = this.findPrevEnabledOption(selectedItemIndex);\n                    if (prevEnabledOption) {\n                        this.selectItem(event, prevEnabledOption);\n                        this.selectedOptionUpdated = true;\n                    }\n                }\n                event.preventDefault();\n                break;\n            //space\n            case 32:\n                if (search) {\n                    if (!this.overlayVisible) {\n                        this.show();\n                    }\n                    else {\n                        this.hide();\n                    }\n                    event.preventDefault();\n                }\n                break;\n            //enter\n            case 13:\n                if (this.overlayVisible && (!this.filter || (this.optionsToDisplay && this.optionsToDisplay.length > 0))) {\n                    this.hide();\n                }\n                else if (!this.overlayVisible) {\n                    this.show();\n                }\n                event.preventDefault();\n                break;\n            //escape and tab\n            case 27:\n            case 9:\n                this.hide();\n                break;\n            //search item based on keyboard input\n            default:\n                if (search && !event.metaKey && event.which !== 17) {\n                    this.search(event);\n                }\n                break;\n        }\n    }\n    search(event) {\n        if (this.searchTimeout) {\n            clearTimeout(this.searchTimeout);\n        }\n        const char = event.key;\n        this.previousSearchChar = this.currentSearchChar;\n        this.currentSearchChar = char;\n        if (this.previousSearchChar === this.currentSearchChar)\n            this.searchValue = this.currentSearchChar;\n        else\n            this.searchValue = this.searchValue ? this.searchValue + char : char;\n        let newOption;\n        if (this.group) {\n            let searchIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : { groupIndex: 0, itemIndex: 0 };\n            newOption = this.searchOptionWithinGroup(searchIndex);\n        }\n        else {\n            let searchIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n            newOption = this.searchOption(++searchIndex);\n        }\n        if (newOption && !this.isOptionDisabled(newOption)) {\n            this.selectItem(event, newOption);\n            this.selectedOptionUpdated = true;\n        }\n        this.searchTimeout = setTimeout(() => {\n            this.searchValue = null;\n        }, 250);\n    }\n    searchOption(index) {\n        let option;\n        if (this.searchValue) {\n            option = this.searchOptionInRange(index, this.optionsToDisplay.length);\n            if (!option) {\n                option = this.searchOptionInRange(0, index);\n            }\n        }\n        return option;\n    }\n    searchOptionInRange(start, end) {\n        for (let i = start; i < end; i++) {\n            let opt = this.optionsToDisplay[i];\n            if (this.getOptionLabel(opt)\n                .toLocaleLowerCase(this.filterLocale)\n                .startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) &&\n                !this.isOptionDisabled(opt)) {\n                return opt;\n            }\n        }\n        return null;\n    }\n    searchOptionWithinGroup(index) {\n        let option;\n        if (this.searchValue) {\n            for (let i = index.groupIndex; i < this.optionsToDisplay.length; i++) {\n                for (let j = index.groupIndex === i ? index.itemIndex + 1 : 0; j < this.getOptionGroupChildren(this.optionsToDisplay[i]).length; j++) {\n                    let opt = this.getOptionGroupChildren(this.optionsToDisplay[i])[j];\n                    if (this.getOptionLabel(opt)\n                        .toLocaleLowerCase(this.filterLocale)\n                        .startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) &&\n                        !this.isOptionDisabled(opt)) {\n                        return opt;\n                    }\n                }\n            }\n            if (!option) {\n                for (let i = 0; i <= index.groupIndex; i++) {\n                    for (let j = 0; j < (index.groupIndex === i ? index.itemIndex : this.getOptionGroupChildren(this.optionsToDisplay[i]).length); j++) {\n                        let opt = this.getOptionGroupChildren(this.optionsToDisplay[i])[j];\n                        if (this.getOptionLabel(opt)\n                            .toLocaleLowerCase(this.filterLocale)\n                            .startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) &&\n                            !this.isOptionDisabled(opt)) {\n                            return opt;\n                        }\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    findOptionIndex(val, opts) {\n        let index = -1;\n        if (opts) {\n            for (let i = 0; i < opts.length; i++) {\n                if ((val == null && this.getOptionValue(opts[i]) == null) || ObjectUtils.equals(val, this.getOptionValue(opts[i]), this.dataKey)) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    findOptionGroupIndex(val, opts) {\n        let groupIndex, itemIndex;\n        if (opts) {\n            for (let i = 0; i < opts.length; i++) {\n                groupIndex = i;\n                itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n                if (itemIndex !== -1) {\n                    break;\n                }\n            }\n        }\n        if (itemIndex !== -1) {\n            return { groupIndex: groupIndex, itemIndex: itemIndex };\n        }\n        else {\n            return -1;\n        }\n    }\n    findOption(val, opts, inGroup) {\n        if (this.group && !inGroup) {\n            let opt;\n            if (opts && opts.length) {\n                for (let optgroup of opts) {\n                    opt = this.findOption(val, this.getOptionGroupChildren(optgroup), true);\n                    if (opt) {\n                        break;\n                    }\n                }\n            }\n            return opt;\n        }\n        else {\n            let index = this.findOptionIndex(val, opts);\n            return index != -1 ? opts[index] : null;\n        }\n    }\n    onFilterInputChange(event) {\n        let inputValue = event.target.value;\n        if (inputValue && inputValue.length) {\n            this._filterValue = inputValue;\n            this.activateFilter();\n        }\n        else {\n            this._filterValue = null;\n            this.optionsToDisplay = this.options;\n        }\n        this.virtualScroll && this.scroller.scrollToIndex(0);\n        this.optionsChanged = true;\n        this.onFilter.emit({ originalEvent: event, filter: this._filterValue });\n    }\n    activateFilter() {\n        let searchFields = (this.filterBy || this.optionLabel || 'label').split(',');\n        if (this.options && this.options.length) {\n            if (this.group) {\n                let filteredGroups = [];\n                for (let optgroup of this.options) {\n                    let filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n                    if (filteredSubOptions && filteredSubOptions.length) {\n                        filteredGroups.push(Object.assign(Object.assign({}, optgroup), { [this.optionGroupChildren]: filteredSubOptions }));\n                    }\n                }\n                this.optionsToDisplay = filteredGroups;\n            }\n            else {\n                this.optionsToDisplay = this.filterService.filter(this.options, searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n            }\n            this.optionsChanged = true;\n        }\n    }\n    applyFocus() {\n        if (this.editable)\n            DomHandler.findSingle(this.el.nativeElement, '.p-dropdown-label.p-inputtext').focus();\n        else\n            DomHandler.findSingle(this.el.nativeElement, 'input[readonly]').focus();\n    }\n    focus() {\n        this.applyFocus();\n    }\n    clear(event) {\n        this.value = null;\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n        this.updateSelectedOption(this.value);\n        this.updateEditableLabel();\n        this.onClear.emit(event);\n    }\n}\nDropdown.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: Dropdown, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i3.FilterService }, { token: i3.PrimeNGConfig }], target: i0.ɵɵFactoryTarget.Component });\nDropdown.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.7\", type: Dropdown, selector: \"p-dropdown\", inputs: { scrollHeight: \"scrollHeight\", filter: \"filter\", name: \"name\", style: \"style\", panelStyle: \"panelStyle\", styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", readonly: \"readonly\", required: \"required\", editable: \"editable\", appendTo: \"appendTo\", tabindex: \"tabindex\", placeholder: \"placeholder\", filterPlaceholder: \"filterPlaceholder\", filterLocale: \"filterLocale\", inputId: \"inputId\", selectId: \"selectId\", dataKey: \"dataKey\", filterBy: \"filterBy\", autofocus: \"autofocus\", resetFilterOnHide: \"resetFilterOnHide\", dropdownIcon: \"dropdownIcon\", optionLabel: \"optionLabel\", optionValue: \"optionValue\", optionDisabled: \"optionDisabled\", optionGroupLabel: \"optionGroupLabel\", optionGroupChildren: \"optionGroupChildren\", autoDisplayFirst: \"autoDisplayFirst\", group: \"group\", showClear: \"showClear\", emptyFilterMessage: \"emptyFilterMessage\", emptyMessage: \"emptyMessage\", lazy: \"lazy\", virtualScroll: \"virtualScroll\", virtualScrollItemSize: \"virtualScrollItemSize\", virtualScrollOptions: \"virtualScrollOptions\", overlayOptions: \"overlayOptions\", ariaFilterLabel: \"ariaFilterLabel\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\", filterMatchMode: \"filterMatchMode\", maxlength: \"maxlength\", tooltip: \"tooltip\", tooltipPosition: \"tooltipPosition\", tooltipPositionStyle: \"tooltipPositionStyle\", tooltipStyleClass: \"tooltipStyleClass\", autofocusFilter: \"autofocusFilter\", overlayDirection: \"overlayDirection\", disabled: \"disabled\", itemSize: \"itemSize\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", options: \"options\", filterValue: \"filterValue\" }, outputs: { onChange: \"onChange\", onFilter: \"onFilter\", onFocus: \"onFocus\", onBlur: \"onBlur\", onClick: \"onClick\", onShow: \"onShow\", onHide: \"onHide\", onClear: \"onClear\", onLazyLoad: \"onLazyLoad\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled\", \"class.p-inputwrapper-focus\": \"focused || overlayVisible\" }, classAttribute: \"p-element p-inputwrapper\" }, providers: [DROPDOWN_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"filterViewChild\", first: true, predicate: [\"filter\"], descendants: true }, { propertyName: \"accessibleViewChild\", first: true, predicate: [\"in\"], descendants: true }, { propertyName: \"editableInputViewChild\", first: true, predicate: [\"editableInput\"], descendants: true }, { propertyName: \"itemsViewChild\", first: true, predicate: [\"items\"], descendants: true }, { propertyName: \"scroller\", first: true, predicate: [\"scroller\"], descendants: true }, { propertyName: \"overlayViewChild\", first: true, predicate: [\"overlay\"], descendants: true }], ngImport: i0, template: `\n        <div\n            #container\n            [ngClass]=\"{ 'p-dropdown p-component': true, 'p-disabled': disabled, 'p-dropdown-open': overlayVisible, 'p-focus': focused, 'p-dropdown-clearable': showClear && !disabled }\"\n            (click)=\"onMouseclick($event)\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n        >\n            <div class=\"p-hidden-accessible\">\n                <input\n                    #in\n                    [attr.id]=\"inputId\"\n                    type=\"text\"\n                    readonly\n                    (focus)=\"onInputFocus($event)\"\n                    aria-haspopup=\"listbox\"\n                    [attr.placeholder]=\"placeholder\"\n                    aria-haspopup=\"listbox\"\n                    [attr.aria-label]=\"ariaLabel\"\n                    [attr.aria-expanded]=\"false\"\n                    [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    (blur)=\"onInputBlur($event)\"\n                    (keydown)=\"onKeydown($event, true)\"\n                    [disabled]=\"disabled\"\n                    [attr.tabindex]=\"tabindex\"\n                    pAutoFocus\n                    [autofocus]=\"autofocus\"\n                    [attr.aria-activedescendant]=\"overlayVisible ? labelId : null\"\n                    role=\"combobox\"\n                />\n            </div>\n            <span\n                [attr.id]=\"labelId\"\n                [ngClass]=\"{ 'p-dropdown-label p-inputtext': true, 'p-dropdown-label-empty': label == null || label.length === 0 }\"\n                *ngIf=\"!editable && label != null\"\n                [pTooltip]=\"tooltip\"\n                [tooltipPosition]=\"tooltipPosition\"\n                [positionStyle]=\"tooltipPositionStyle\"\n                [tooltipStyleClass]=\"tooltipStyleClass\"\n            >\n                <ng-container *ngIf=\"!selectedItemTemplate\">{{ label || 'empty' }}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedOption }\"></ng-container>\n            </span>\n            <span [ngClass]=\"{ 'p-dropdown-label p-inputtext p-placeholder': true, 'p-dropdown-label-empty': placeholder == null || placeholder.length === 0 }\" *ngIf=\"!editable && label == null\">{{ placeholder || 'empty' }}</span>\n            <input\n                #editableInput\n                type=\"text\"\n                [attr.maxlength]=\"maxlength\"\n                class=\"p-dropdown-label p-inputtext\"\n                *ngIf=\"editable\"\n                [disabled]=\"disabled\"\n                [attr.placeholder]=\"placeholder\"\n                aria-haspopup=\"listbox\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                (input)=\"onEditableInputChange($event)\"\n                (focus)=\"onEditableInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <i class=\"p-dropdown-clear-icon pi pi-times\" (click)=\"clear($event)\" *ngIf=\"isVisibleClearIcon\"></i>\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\">\n                <span class=\"p-dropdown-trigger-icon\" [ngClass]=\"dropdownIcon\"></span>\n            </div>\n            <p-overlay\n                #overlay\n                [(visible)]=\"overlayVisible\"\n                [options]=\"overlayOptions\"\n                [target]=\"'@parent'\"\n                [appendTo]=\"appendTo\"\n                [autoZIndex]=\"autoZIndex\"\n                [baseZIndex]=\"baseZIndex\"\n                [showTransitionOptions]=\"showTransitionOptions\"\n                [hideTransitionOptions]=\"hideTransitionOptions\"\n                (onAnimationStart)=\"onOverlayAnimationStart($event)\"\n                (onHide)=\"hide()\"\n            >\n                <ng-template pTemplate=\"content\">\n                    <div [ngClass]=\"'p-dropdown-panel p-component'\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                        <div class=\"p-dropdown-header\" *ngIf=\"filter\" (click)=\"$event.stopPropagation()\">\n                            <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                                <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                            </ng-container>\n                            <ng-template #builtInFilterElement>\n                                <div class=\"p-dropdown-filter-container\">\n                                    <input\n                                        #filter\n                                        type=\"text\"\n                                        autocomplete=\"off\"\n                                        [value]=\"filterValue || ''\"\n                                        class=\"p-dropdown-filter p-inputtext p-component\"\n                                        [attr.placeholder]=\"filterPlaceholder\"\n                                        (keydown.enter)=\"$event.preventDefault()\"\n                                        (keydown)=\"onKeydown($event, false)\"\n                                        (input)=\"onFilterInputChange($event)\"\n                                        [attr.aria-label]=\"ariaFilterLabel\"\n                                        [attr.aria-activedescendant]=\"overlayVisible ? 'p-highlighted-option' : labelId\"\n                                    />\n                                    <span class=\"p-dropdown-filter-icon pi pi-search\"></span>\n                                </div>\n                            </ng-template>\n                        </div>\n                        <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                            <p-scroller\n                                *ngIf=\"virtualScroll\"\n                                #scroller\n                                [items]=\"optionsToDisplay\"\n                                [style]=\"{ height: scrollHeight }\"\n                                [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                                [autoSize]=\"true\"\n                                [lazy]=\"lazy\"\n                                (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                                [options]=\"virtualScrollOptions\"\n                            >\n                                <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                                </ng-template>\n                                <ng-container *ngIf=\"loaderTemplate\">\n                                    <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                                        <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                                    </ng-template>\n                                </ng-container>\n                            </p-scroller>\n                            <ng-container *ngIf=\"!virtualScroll\">\n                                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: optionsToDisplay, options: {} }\"></ng-container>\n                            </ng-container>\n\n                            <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                                <ul #items [attr.id]=\"listId\" class=\"p-dropdown-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\" role=\"listbox\">\n                                    <ng-container *ngIf=\"group\">\n                                        <ng-template ngFor let-optgroup [ngForOf]=\"items\">\n                                            <li class=\"p-dropdown-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                                            </li>\n                                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup), selectedOption: selectedOption }\"></ng-container>\n                                        </ng-template>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"!group\">\n                                        <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: items, selectedOption: selectedOption }\"></ng-container>\n                                    </ng-container>\n                                    <ng-template #itemslist let-options let-selectedOption=\"selectedOption\">\n                                        <ng-template ngFor let-option let-i=\"index\" [ngForOf]=\"options\">\n                                            <p-dropdownItem\n                                                [option]=\"option\"\n                                                [selected]=\"selectedOption == option\"\n                                                [label]=\"getOptionLabel(option)\"\n                                                [disabled]=\"isOptionDisabled(option)\"\n                                                (onClick)=\"onItemClick($event)\"\n                                                [template]=\"itemTemplate\"\n                                            ></p-dropdownItem>\n                                        </ng-template>\n                                    </ng-template>\n                                    <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                            {{ emptyFilterMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                                    </li>\n                                    <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                            {{ emptyMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                                    </li>\n                                </ul>\n                            </ng-template>\n                        </div>\n                        <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                    </div>\n                </ng-template>\n            </p-overlay>\n        </div>\n    `, isInline: true, styles: [\".p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;visibility:hidden}input.p-dropdown-label{cursor:default}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: i4.Overlay, selector: \"p-overlay\", inputs: [\"visible\", \"mode\", \"style\", \"styleClass\", \"contentStyle\", \"contentStyleClass\", \"target\", \"appendTo\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\", \"listener\", \"responsive\", \"options\"], outputs: [\"visibleChange\", \"onBeforeShow\", \"onShow\", \"onBeforeHide\", \"onHide\", \"onAnimationStart\", \"onAnimationDone\"] }, { kind: \"directive\", type: i3.PrimeTemplate, selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }, { kind: \"directive\", type: i5.Tooltip, selector: \"[pTooltip]\", inputs: [\"tooltipPosition\", \"tooltipEvent\", \"appendTo\", \"positionStyle\", \"tooltipStyleClass\", \"tooltipZIndex\", \"escape\", \"showDelay\", \"hideDelay\", \"life\", \"positionTop\", \"positionLeft\", \"fitContent\", \"pTooltip\", \"tooltipDisabled\", \"tooltipOptions\"] }, { kind: \"component\", type: i6.Scroller, selector: \"p-scroller\", inputs: [\"id\", \"style\", \"styleClass\", \"tabindex\", \"items\", \"itemSize\", \"scrollHeight\", \"scrollWidth\", \"orientation\", \"step\", \"delay\", \"resizeDelay\", \"appendOnly\", \"inline\", \"lazy\", \"disabled\", \"loaderDisabled\", \"columns\", \"showSpacer\", \"showLoader\", \"numToleratedItems\", \"loading\", \"autoSize\", \"trackBy\", \"options\"], outputs: [\"onLazyLoad\", \"onScroll\", \"onScrollIndexChange\"] }, { kind: \"directive\", type: i7.AutoFocus, selector: \"[pAutoFocus]\", inputs: [\"autofocus\"] }, { kind: \"component\", type: DropdownItem, selector: \"p-dropdownItem\", inputs: [\"option\", \"selected\", \"label\", \"disabled\", \"visible\", \"itemSize\", \"template\"], outputs: [\"onClick\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: Dropdown, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-dropdown', template: `\n        <div\n            #container\n            [ngClass]=\"{ 'p-dropdown p-component': true, 'p-disabled': disabled, 'p-dropdown-open': overlayVisible, 'p-focus': focused, 'p-dropdown-clearable': showClear && !disabled }\"\n            (click)=\"onMouseclick($event)\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n        >\n            <div class=\"p-hidden-accessible\">\n                <input\n                    #in\n                    [attr.id]=\"inputId\"\n                    type=\"text\"\n                    readonly\n                    (focus)=\"onInputFocus($event)\"\n                    aria-haspopup=\"listbox\"\n                    [attr.placeholder]=\"placeholder\"\n                    aria-haspopup=\"listbox\"\n                    [attr.aria-label]=\"ariaLabel\"\n                    [attr.aria-expanded]=\"false\"\n                    [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    (blur)=\"onInputBlur($event)\"\n                    (keydown)=\"onKeydown($event, true)\"\n                    [disabled]=\"disabled\"\n                    [attr.tabindex]=\"tabindex\"\n                    pAutoFocus\n                    [autofocus]=\"autofocus\"\n                    [attr.aria-activedescendant]=\"overlayVisible ? labelId : null\"\n                    role=\"combobox\"\n                />\n            </div>\n            <span\n                [attr.id]=\"labelId\"\n                [ngClass]=\"{ 'p-dropdown-label p-inputtext': true, 'p-dropdown-label-empty': label == null || label.length === 0 }\"\n                *ngIf=\"!editable && label != null\"\n                [pTooltip]=\"tooltip\"\n                [tooltipPosition]=\"tooltipPosition\"\n                [positionStyle]=\"tooltipPositionStyle\"\n                [tooltipStyleClass]=\"tooltipStyleClass\"\n            >\n                <ng-container *ngIf=\"!selectedItemTemplate\">{{ label || 'empty' }}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedOption }\"></ng-container>\n            </span>\n            <span [ngClass]=\"{ 'p-dropdown-label p-inputtext p-placeholder': true, 'p-dropdown-label-empty': placeholder == null || placeholder.length === 0 }\" *ngIf=\"!editable && label == null\">{{ placeholder || 'empty' }}</span>\n            <input\n                #editableInput\n                type=\"text\"\n                [attr.maxlength]=\"maxlength\"\n                class=\"p-dropdown-label p-inputtext\"\n                *ngIf=\"editable\"\n                [disabled]=\"disabled\"\n                [attr.placeholder]=\"placeholder\"\n                aria-haspopup=\"listbox\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                (input)=\"onEditableInputChange($event)\"\n                (focus)=\"onEditableInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <i class=\"p-dropdown-clear-icon pi pi-times\" (click)=\"clear($event)\" *ngIf=\"isVisibleClearIcon\"></i>\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\">\n                <span class=\"p-dropdown-trigger-icon\" [ngClass]=\"dropdownIcon\"></span>\n            </div>\n            <p-overlay\n                #overlay\n                [(visible)]=\"overlayVisible\"\n                [options]=\"overlayOptions\"\n                [target]=\"'@parent'\"\n                [appendTo]=\"appendTo\"\n                [autoZIndex]=\"autoZIndex\"\n                [baseZIndex]=\"baseZIndex\"\n                [showTransitionOptions]=\"showTransitionOptions\"\n                [hideTransitionOptions]=\"hideTransitionOptions\"\n                (onAnimationStart)=\"onOverlayAnimationStart($event)\"\n                (onHide)=\"hide()\"\n            >\n                <ng-template pTemplate=\"content\">\n                    <div [ngClass]=\"'p-dropdown-panel p-component'\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                        <div class=\"p-dropdown-header\" *ngIf=\"filter\" (click)=\"$event.stopPropagation()\">\n                            <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                                <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                            </ng-container>\n                            <ng-template #builtInFilterElement>\n                                <div class=\"p-dropdown-filter-container\">\n                                    <input\n                                        #filter\n                                        type=\"text\"\n                                        autocomplete=\"off\"\n                                        [value]=\"filterValue || ''\"\n                                        class=\"p-dropdown-filter p-inputtext p-component\"\n                                        [attr.placeholder]=\"filterPlaceholder\"\n                                        (keydown.enter)=\"$event.preventDefault()\"\n                                        (keydown)=\"onKeydown($event, false)\"\n                                        (input)=\"onFilterInputChange($event)\"\n                                        [attr.aria-label]=\"ariaFilterLabel\"\n                                        [attr.aria-activedescendant]=\"overlayVisible ? 'p-highlighted-option' : labelId\"\n                                    />\n                                    <span class=\"p-dropdown-filter-icon pi pi-search\"></span>\n                                </div>\n                            </ng-template>\n                        </div>\n                        <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                            <p-scroller\n                                *ngIf=\"virtualScroll\"\n                                #scroller\n                                [items]=\"optionsToDisplay\"\n                                [style]=\"{ height: scrollHeight }\"\n                                [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                                [autoSize]=\"true\"\n                                [lazy]=\"lazy\"\n                                (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                                [options]=\"virtualScrollOptions\"\n                            >\n                                <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                                </ng-template>\n                                <ng-container *ngIf=\"loaderTemplate\">\n                                    <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                                        <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                                    </ng-template>\n                                </ng-container>\n                            </p-scroller>\n                            <ng-container *ngIf=\"!virtualScroll\">\n                                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: optionsToDisplay, options: {} }\"></ng-container>\n                            </ng-container>\n\n                            <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                                <ul #items [attr.id]=\"listId\" class=\"p-dropdown-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\" role=\"listbox\">\n                                    <ng-container *ngIf=\"group\">\n                                        <ng-template ngFor let-optgroup [ngForOf]=\"items\">\n                                            <li class=\"p-dropdown-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                                            </li>\n                                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup), selectedOption: selectedOption }\"></ng-container>\n                                        </ng-template>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"!group\">\n                                        <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: items, selectedOption: selectedOption }\"></ng-container>\n                                    </ng-container>\n                                    <ng-template #itemslist let-options let-selectedOption=\"selectedOption\">\n                                        <ng-template ngFor let-option let-i=\"index\" [ngForOf]=\"options\">\n                                            <p-dropdownItem\n                                                [option]=\"option\"\n                                                [selected]=\"selectedOption == option\"\n                                                [label]=\"getOptionLabel(option)\"\n                                                [disabled]=\"isOptionDisabled(option)\"\n                                                (onClick)=\"onItemClick($event)\"\n                                                [template]=\"itemTemplate\"\n                                            ></p-dropdownItem>\n                                        </ng-template>\n                                    </ng-template>\n                                    <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                            {{ emptyFilterMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                                    </li>\n                                    <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                            {{ emptyMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                                    </li>\n                                </ul>\n                            </ng-template>\n                        </div>\n                        <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                    </div>\n                </ng-template>\n            </p-overlay>\n        </div>\n    `, host: {\n                        class: 'p-element p-inputwrapper',\n                        '[class.p-inputwrapper-filled]': 'filled',\n                        '[class.p-inputwrapper-focus]': 'focused || overlayVisible'\n                    }, providers: [DROPDOWN_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;visibility:hidden}input.p-dropdown-label{cursor:default}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i3.FilterService }, { type: i3.PrimeNGConfig }]; }, propDecorators: { scrollHeight: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], filterPlaceholder: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], selectId: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], filterBy: [{\n                type: Input\n            }], autofocus: [{\n                type: Input\n            }], resetFilterOnHide: [{\n                type: Input\n            }], dropdownIcon: [{\n                type: Input\n            }], optionLabel: [{\n                type: Input\n            }], optionValue: [{\n                type: Input\n            }], optionDisabled: [{\n                type: Input\n            }], optionGroupLabel: [{\n                type: Input\n            }], optionGroupChildren: [{\n                type: Input\n            }], autoDisplayFirst: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], showClear: [{\n                type: Input\n            }], emptyFilterMessage: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], virtualScrollItemSize: [{\n                type: Input\n            }], virtualScrollOptions: [{\n                type: Input\n            }], overlayOptions: [{\n                type: Input\n            }], ariaFilterLabel: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], filterMatchMode: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], tooltipPosition: [{\n                type: Input\n            }], tooltipPositionStyle: [{\n                type: Input\n            }], tooltipStyleClass: [{\n                type: Input\n            }], autofocusFilter: [{\n                type: Input\n            }], overlayDirection: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }], onFilter: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], onClear: [{\n                type: Output\n            }], onLazyLoad: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }], filterViewChild: [{\n                type: ViewChild,\n                args: ['filter']\n            }], accessibleViewChild: [{\n                type: ViewChild,\n                args: ['in']\n            }], editableInputViewChild: [{\n                type: ViewChild,\n                args: ['editableInput']\n            }], itemsViewChild: [{\n                type: ViewChild,\n                args: ['items']\n            }], scroller: [{\n                type: ViewChild,\n                args: ['scroller']\n            }], overlayViewChild: [{\n                type: ViewChild,\n                args: ['overlay']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], disabled: [{\n                type: Input\n            }], itemSize: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], filterValue: [{\n                type: Input\n            }] } });\nclass DropdownModule {\n}\nDropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: DropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.7\", ngImport: i0, type: DropdownModule, declarations: [Dropdown, DropdownItem], imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule], exports: [Dropdown, OverlayModule, SharedModule, ScrollerModule] });\nDropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: DropdownModule, imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, OverlayModule, SharedModule, ScrollerModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: DropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule],\n                    exports: [Dropdown, OverlayModule, SharedModule, ScrollerModule],\n                    declarations: [Dropdown, DropdownItem]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DROPDOWN_VALUE_ACCESSOR, Dropdown, DropdownItem, DropdownModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}