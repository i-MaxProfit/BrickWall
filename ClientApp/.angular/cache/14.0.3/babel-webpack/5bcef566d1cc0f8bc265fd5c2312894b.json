{"ast":null,"code":"import _asyncToGenerator from \"C:/Projects/BrickWall/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { lastValueFrom } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BrickTypeService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this._baseUrl = baseUrl;\n  }\n\n  get() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const url = `${_this._baseUrl}bricktype`;\n\n      const brickTypes$ = _this.http.get(url).pipe(map(response => response));\n\n      return yield lastValueFrom(brickTypes$);\n    })();\n  }\n\n}\n\nBrickTypeService.ɵfac = function BrickTypeService_Factory(t) {\n  return new (t || BrickTypeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\n\nBrickTypeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BrickTypeService,\n  factory: BrickTypeService.ɵfac\n});","map":{"version":3,"mappings":";AAIA,SAASA,aAAT,QAA8B,MAA9B;AACA,SAASC,GAAT,QAAoB,gBAApB;;;AAGA,OAAM,MAAOC,gBAAP,CAAuB;EAG3BC,YAAoBC,IAApB,EAA0DC,OAA1D,EAAyE;IAArD;IAClB,KAAKC,QAAL,GAAgBD,OAAhB;EACD;;EAEKE,GAAG;IAAA;;IAAA;MACP,MAAMC,GAAG,GAAG,GAAG,KAAI,CAACF,QAAQ,WAA5B;;MACA,MAAMG,WAAW,GAAG,KAAI,CAACL,IAAL,CAAUG,GAAV,CAA2BC,GAA3B,EAAgCE,IAAhC,CAAqCT,GAAG,CAAEU,QAAD,IAAcA,QAAf,CAAxC,CAApB;;MACA,aAAaX,aAAa,CAACS,WAAD,CAA1B;IAHO;EAIR;;AAX0B;;;mBAAhBP,kBAAgBU,wCAGmB,UAHnB;AAG6B;;;SAH7CV;EAAgBW,SAAhBX,gBAAgB","names":["lastValueFrom","map","BrickTypeService","constructor","http","baseUrl","_baseUrl","get","url","brickTypes$","pipe","response","i0","factory"],"sourceRoot":"","sources":["C:\\Projects\\BrickWall\\ClientApp\\src\\app\\services\\brick-type.service.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport { BrickType } from '../models/brick.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { lastValueFrom } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class BrickTypeService {\r\n  _baseUrl: string;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this._baseUrl = baseUrl;\r\n  }\r\n\r\n  async get(): Promise<BrickType[]> {\r\n    const url = `${this._baseUrl}bricktype`;\r\n    const brickTypes$ = this.http.get<BrickType[]>(url).pipe(map((response) => response));\r\n    return await lastValueFrom(brickTypes$);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}