{"ast":null,"code":"import _asyncToGenerator from \"C:/Projects/BrickWall/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { lastValueFrom } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BrickOptionService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this._baseUrl = baseUrl;\n  }\n\n  get(brickTypeId) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const url = `${_this._baseUrl}brickoption?brickTypeId=${brickTypeId}`;\n\n      const brickOption$ = _this.http.get(url).pipe(map(response => response));\n\n      return yield lastValueFrom(brickOption$);\n    })();\n  }\n\n}\n\nBrickOptionService.ɵfac = function BrickOptionService_Factory(t) {\n  return new (t || BrickOptionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\n\nBrickOptionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BrickOptionService,\n  factory: BrickOptionService.ɵfac\n});","map":{"version":3,"mappings":";AAGA,SAASA,aAAT,QAA8B,MAA9B;AACA,SAASC,GAAT,QAAoB,gBAApB;;;AAGA,OAAM,MAAOC,kBAAP,CAAyB;EAG7BC,YAAoBC,IAApB,EAA0DC,OAA1D,EAAyE;IAArD;IAClB,KAAKC,QAAL,GAAgBD,OAAhB;EACD;;EAEKE,GAAG,CAACC,WAAD,EAAoB;IAAA;;IAAA;MAC3B,MAAMC,GAAG,GAAG,GAAG,KAAI,CAACH,QAAQ,2BAA2BE,WAAW,EAAlE;;MACA,MAAME,YAAY,GAAG,KAAI,CAACN,IAAL,CAAUG,GAAV,CAA2BE,GAA3B,EAAgCE,IAAhC,CAAqCV,GAAG,CAAEW,QAAD,IAAcA,QAAf,CAAxC,CAArB;;MACA,aAAaZ,aAAa,CAACU,YAAD,CAA1B;IAH2B;EAI5B;;AAX4B;;;mBAAlBR,oBAAkBW,wCAGiB,UAHjB;AAG2B;;;SAH7CX;EAAkBY,SAAlBZ,kBAAkB","names":["lastValueFrom","map","BrickOptionService","constructor","http","baseUrl","_baseUrl","get","brickTypeId","url","brickOption$","pipe","response","i0","factory"],"sourceRoot":"","sources":["C:\\Projects\\BrickWall\\ClientApp\\src\\app\\services\\brick-option.service.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport { BrickOption } from '../models/brick.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { lastValueFrom } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class BrickOptionService {\r\n  _baseUrl: string;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this._baseUrl = baseUrl;\r\n  }\r\n\r\n  async get(brickTypeId: number): Promise<BrickOption> {\r\n    const url = `${this._baseUrl}brickoption?brickTypeId=${brickTypeId}`;\r\n    const brickOption$ = this.http.get<BrickOption>(url).pipe(map((response) => response));\r\n    return await lastValueFrom(brickOption$);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}